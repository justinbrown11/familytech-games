"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/questiongenerator";
exports.ids = ["pages/api/questiongenerator"];
exports.modules = {

/***/ "(api)/./data/fsdatastructures.js":
/*!**********************************!*\
  !*** ./data/fsdatastructures.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Person\": () => (/* binding */ Person),\n/* harmony export */   \"default\": () => (/* binding */ Tree)\n/* harmony export */ });\nclass Tree {\n    constructor(){\n        //map of ascendancy number to index\n        this.personMap = new Map();\n    }\n    setPersons(personMap) {\n        this.personMap = personMap;\n    }\n    addPerson = function(person) {\n        this.personMap.set(person.a_num, person);\n    };\n    getPerson = function(a_num) {\n        return this.personMap.get(a_num.toString());\n    };\n    getSpouse = function(a_num) {\n        let person = this.getPerson(a_num);\n        if (person == null) {\n            return null;\n        }\n        if (person.gender == \"Male\") {\n            let spouse = this.getPerson(a_num + 1);\n            if (spouse.gender == \"Female\") {\n                return spouse;\n            } else {\n                return null;\n            }\n        } else {\n            return this.getPerson(a_num - 1);\n        }\n    };\n    getFather = function(a_num) {\n        let child = this.getPerson(a_num);\n        if (child == null) {\n            return null;\n        }\n        let fa_num = 2 * a_num;\n        return this.getPerson(fa_num);\n    };\n    getMother = function(a_num) {\n        let child = this.getPerson(a_num);\n        if (child == null) {\n            return null;\n        }\n        let ma_num = 2 * a_num + 1;\n        return this.getPerson(ma_num);\n    };\n    getChild = function(a_num) {\n        let parent = this.getPerson(a_num);\n        if (parent == null) {\n            return null;\n        }\n        if (parent.gender == \"Male\") {\n            return this.getPerson(a_num / 2);\n        } else {\n            return this.getPerson((a_num - 1) / 2);\n        }\n    };\n    insertRelationships = function(relationships) {\n        var pidMap = new Map();\n        for (const person of this.personMap.values()){\n            pidMap.set(person.pid, person.a_num);\n        }\n        for (const relationship of relationships){\n            if (!relationship.facts) continue;\n            if (relationship.facts[0].type == \"http://gedcomx.org/Marriage\") {\n                let person1 = this.personMap.get(pidMap.get(relationship.person1.resourceId));\n                let person2 = this.personMap.get(pidMap.get(relationship.person2.resourceId));\n                if (person1 && person2 && relationship.facts[0].date) person1.addMarriageDate(relationship.facts[0].date.original);\n                if (person1 && person2 && relationship.facts[0].place) person1.addMarriagePlace(relationship.facts[0].place.original);\n                if (person1 && person2 && relationship.facts[0].date) person2.addMarriageDate(relationship.facts[0].date.original);\n                if (person1 && person2 && relationship.facts[0].place) person2.addMarriagePlace(relationship.facts[0].place.original);\n            }\n        }\n        ;\n    };\n};\nclass Person {\n    constructor(data){\n        this.name = new Name(data);\n        this.gender = data.display.gender;\n        this.living = data.living;\n        this.a_num = parseInt(data.display.ascendancyNumber) || undefined; //used as a pid\n        this.generation = (this.a_num << 0).toString(2).length;\n        this.pid = data.id; //unused\n        this.birthDate = new MyDate(data.display.birthDate);\n        this.deathDate = new MyDate(data.display.deathDate);\n        this.birthPlace = normalizePlace(data.display.birthPlace);\n        this.deathPlace = normalizePlace(data.display.deathPlace);\n        var lifespanArray = data.display.lifespan.split(\"-\");\n        var lifespanBirth = lifespanArray.length > 0 ? parseInt(lifespanArray[0]) : undefined;\n        var lifespanDeath = lifespanArray.length > 1 ? parseInt(lifespanArray[1]) : undefined;\n        this.lifespan = {\n            string: data.display.lifespan,\n            birth: lifespanBirth,\n            death: lifespanDeath,\n            years: lifespanBirth && lifespanDeath ? lifespanDeath - lifespanBirth : undefined,\n            toString: function() {\n                return this.string;\n            },\n            equals: function(other) {\n                return other.birth == this.birth && other.death == this.death;\n            }\n        };\n        this.occupation = getOccupation(data);\n    }\n    addMarriageDate = function(marriageDate) {\n        this.marriageDate = new MyDate(marriageDate);\n    };\n    addMarriagePlace = function(marriagePlace) {\n        this.marriagePlace = normalizePlace(marriagePlace);\n    };\n}\nclass MyDate {\n    constructor(date){\n        var day, month, year;\n        if (date) {\n            var arr = date.split(\" \");\n            for(var i in arr){\n                var elem = arr[i];\n                var num = parseInt(elem);\n                if (num > 0 && num < 32) day = num.toString();\n                else if (isNaN(num)) month = months[elem.toLowerCase()];\n                else if (elem.length == 4) year = elem;\n            }\n        }\n        this.day = day;\n        this.month = month;\n        this.year = year;\n        this.original = date;\n    }\n}\nvar months = {\n    \"january\": \"January\",\n    \"jan\": \"January\",\n    \"february\": \"February\",\n    \"feb\": \"February\",\n    \"mar\": \"March\",\n    \"march\": \"March\",\n    \"apr\": \"April\",\n    \"april\": \"April\",\n    \"may\": \"May\",\n    \"jun\": \"June\",\n    \"june\": \"June\",\n    \"july\": \"July\",\n    \"jul\": \"July\",\n    \"august\": \"August\",\n    \"aug\": \"August\",\n    \"september\": \"September\",\n    \"sept\": \"September\",\n    \"october\": \"October\",\n    \"oct\": \"October\",\n    \"november\": \"November\",\n    \"nov\": \"November\",\n    \"december\": \"December\",\n    \"dec\": \"December\"\n};\nclass Name {\n    constructor(person){\n        let given;\n        let surname;\n        let names = person.names;\n        if (names) {\n            let preferredNameIndex = 0;\n            let counter = 0;\n            while(counter < names.length && !names[counter].preferred){\n                counter++;\n            }\n            if (names[counter].preferred) {\n                preferredNameIndex = counter;\n            }\n            let forms = names[preferredNameIndex].nameForms;\n            if (forms && forms[0]) {\n                let parts = forms[0].parts;\n                for(let i in parts){\n                    if (parts[i].type === \"http://gedcomx.org/Given\") {\n                        let name = parts[i].value;\n                        if (name.toLowerCase() !== \"unknown\") {\n                            given = name;\n                        }\n                    } else if (parts[i].type === \"http://gedcomx.org/Surname\") {\n                        let name = parts[i].value;\n                        if (name.toLowerCase() !== \"unknown\") {\n                            surname = name;\n                        }\n                    }\n                }\n            }\n        }\n        this.full = person.display.name;\n        this.given = given;\n        this.first = given ? given.split(\" \")[0] : undefined;\n        //this.middle = given ? given.replace(this.first + \" \", '') : undefined;\n        this.last = surname;\n        this.compressedName = (this.first.replace(/\\s/g, \"\") + this.last.replace(/\\s/g, \"\")).toUpperCase();\n        //this.compressedName = this.full.replace(/[\\s.,-]/g, '').toUpperCase();\n        this.isFull = !!this.full && !!given && !!surname;\n    }\n}\nvar normalizePlace = function(place) {\n    if (place) {\n        var array = place.split(/,\\s*/);\n        var country = getCountry(place);\n        if (country) array[array.length - 1] = country;\n        //remove duplicates\n        for(var i in array){\n            for(var j in array){\n                if (i != j && array[i] == array[j]) {\n                    array.splice(i, 1);\n                }\n            }\n        }\n        //remove blanks\n        for(var i in array){\n            if (array[i].search(/[a-zA-Z]/) < 0) array.splice(i, 1);\n        }\n        if (array.length > 3) {\n            array.splice(1, array.length - 3);\n        }\n        return array.join(\", \");\n    }\n};\nfunction getOccupation(person) {\n    if (!person.facts || !person.facts.length) return undefined;\n    for (let f of person.facts){\n        if (f.type == \"http://gedcomx.org/Occupation\" && f.value) {\n            if (f.value.includes(\"Laborer\") || f.value.includes(\"Retired\")) continue;\n            return f.value;\n        }\n    }\n    return undefined;\n}\nfunction getCountry(place) {\n    if (place) {\n        var arr = place.split(/,\\s*/);\n        var key = arr[arr.length - 1].toLowerCase().split(\".\").join(\"\");\n        return countryMap[key];\n    }\n    return undefined;\n}\nvar countryMap = {\n    \"us\": \"United States\",\n    \"usa\": \"United States\",\n    \"united states\": \"United States\",\n    \"united states of america\": \"United States\",\n    \"alabama\": \"United States\",\n    \"al\": \"United States\",\n    \"alaska\": \"United States\",\n    \"ak\": \"United States\",\n    \"arizona\": \"United States\",\n    \"ar\": \"United States\",\n    \"arkansas\": \"United States\",\n    \"ar\": \"United States\",\n    \"california\": \"United States\",\n    \"ca\": \"United States\",\n    \"cal\": \"United States\",\n    \"colorado\": \"United States\",\n    \"co\": \"United States\",\n    \"connecticut\": \"United States\",\n    \"ct\": \"United States\",\n    \"conn\": \"United States\",\n    \"delaware\": \"United States\",\n    \"de\": \"United States\",\n    \"florida\": \"United States\",\n    \"fl\": \"United States\",\n    \"georgia\": \"United States\",\n    \"ga\": \"United States\",\n    \"hawaii\": \"United States\",\n    \"hi\": \"United States\",\n    \"idaho\": \"United States\",\n    \"id\": \"United States\",\n    \"illinois\": \"United States\",\n    \"il\": \"United States\",\n    \"indiana\": \"United States\",\n    \"in\": \"United States\",\n    \"iowa\": \"United States\",\n    \"ia\": \"United States\",\n    \"kansas\": \"United States\",\n    \"ks\": \"United States\",\n    \"kentucky\": \"United States\",\n    \"ky\": \"United States\",\n    \"louisianna\": \"United States\",\n    \"la\": \"United States\",\n    \"main\": \"United States\",\n    \"me\": \"United States\",\n    \"maryland\": \"United States\",\n    \"md\": \"United States\",\n    \"massachusetts\": \"United States\",\n    \"ma\": \"United States\",\n    \"michigan\": \"United States\",\n    \"mi\": \"United States\",\n    \"minnesota\": \"United States\",\n    \"mn\": \"United States\",\n    \"mississippi\": \"United States\",\n    \"ms\": \"United States\",\n    \"missouri\": \"United States\",\n    \"mo\": \"United States\",\n    \"montana\": \"United States\",\n    \"mt\": \"United States\",\n    \"nebraska\": \"United States\",\n    \"ne\": \"United States\",\n    \"nevada\": \"United States\",\n    \"nv\": \"United States\",\n    \"new hampshire\": \"United States\",\n    \"nh\": \"United States\",\n    \"new jersey\": \"United States\",\n    \"nj\": \"United States\",\n    \"new mexico\": \"United States\",\n    \"nm\": \"United States\",\n    \"new york\": \"United States\",\n    \"ny\": \"United States\",\n    \"north carolina\": \"United States\",\n    \"nc\": \"United States\",\n    \"north dakota\": \"United States\",\n    \"nd\": \"United States\",\n    \"ohio\": \"United States\",\n    \"oh\": \"United States\",\n    \"oklahoma\": \"United States\",\n    \"ok\": \"United States\",\n    \"oregon\": \"United States\",\n    \"or\": \"United States\",\n    \"pennsylvania\": \"United States\",\n    \"pa\": \"United States\",\n    \"penn\": \"United States\",\n    \"rhode island\": \"United States\",\n    \"ri\": \"United States\",\n    \"south carolina\": \"United States\",\n    \"sc\": \"United States\",\n    \"south dakota\": \"United States\",\n    \"sd\": \"United States\",\n    \"tennessee\": \"United States\",\n    \"tn\": \"United States\",\n    \"texas\": \"United States\",\n    \"tx\": \"United States\",\n    \"utah territory\": \"United States\",\n    \"utah\": \"United States\",\n    \"ut\": \"United States\",\n    \"vermont\": \"United States\",\n    \"vt\": \"United States\",\n    \"virginia\": \"United States\",\n    \"va\": \"United States\",\n    \"washington\": \"United States\",\n    \"wa\": \"United States\",\n    \"west virginia\": \"United States\",\n    \"wv\": \"United States\",\n    \"wisconsin\": \"United States\",\n    \"wi\": \"United States\",\n    \"wyoming\": \"United States\",\n    \"wy\": \"United States\",\n    \"afghanistan\": \"Afghanistan\",\n    \"al\": \"Albania\",\n    \"alb\": \"Albania\",\n    \"albania\": \"Albania\",\n    \"algeria\": \"Algeria\",\n    \"ad\": \"Andorra\",\n    \"add\": \"Andorra\",\n    \"andorra\": \"Andorra\",\n    \"angola\": \"Angola\",\n    \"anguilla\": \"Aungilla\",\n    \"antigua and barbuda\": \"Antigua and Barbuda\",\n    \"antigua\": \"Antigua and Barbuda\",\n    \"barbuda\": \"Antigua and Barbuda\",\n    \"antigua & barbuda\": \"Antigua and Barbuda\",\n    \"argentina\": \"Argentina\",\n    \"am\": \"Armenia\",\n    \"arm\": \"Armenia\",\n    \"armenia\": \"Armenia\",\n    \"aruba\": \"Aruba\",\n    \"australia\": \"Australia\",\n    \"at\": \"Austria\",\n    \"aut\": \"Austria\",\n    \"austria\": \"Austria\",\n    \"az\": \"Azerbaijan\",\n    \"aze\": \"Azerbaijan\",\n    \"azerbaijan\": \"Azerbaijan\",\n    \"bahamas\": \"Bahamas\",\n    \"bahrain\": \"Bahrain\",\n    \"bangladesh\": \"Bangladesh\",\n    \"barbados\": \"Barbados\",\n    \"by\": \"Belarus\",\n    \"blr\": \"Belarus\",\n    \"belarus\": \"Belarus\",\n    \"be\": \"Belgium\",\n    \"bel\": \"Belgium\",\n    \"belgium\": \"Belgium\",\n    \"belize\": \"Belize\",\n    \"belice\": \"Belize\",\n    \"benin\": \"Benin\",\n    \"bemuda\": \"Bermuda\",\n    \"bhutan\": \"Bhutan\",\n    \"bolivia\": \"Bolivia\",\n    \"ba\": \"Bosnia and Herzegovina\",\n    \"bih\": \"Bosnia and Herzegovina\",\n    \"bosnia and herzegovina\": \"Bosnia and Herzegovina\",\n    \"botswana\": \"Botswana\",\n    \"brazil\": \"Brazil\",\n    \"british virgin islands\": \"British Virgin Islands\",\n    \"brunei\": \"Brunei\",\n    \"bg\": \"Bulgaria\",\n    \"bgr\": \"Bulgaria\",\n    \"bulgaria\": \"Bulgaria\",\n    \"burkina faso\": \"Burkina Faso\",\n    \"burundi\": \"Burundi\",\n    \"cabo verde\": \"Cabo Verde\",\n    \"cape verde\": \"Cabo Verde\",\n    \"verde cape\": \"Cabo Verde\",\n    \"cape green\": \"Cabo Verde\",\n    \"green cape\": \"Cabo Verde\",\n    \"cambodia\": \"Cambodia\",\n    \"cameroon\": \"Cameroon\",\n    \"canada\": \"Canada\",\n    \"cayman islands\": \"Cayman Islands\",\n    \"central african republic\": \"Central African Republic\",\n    \"chad\": \"Chad\",\n    \"chile\": \"Chile\",\n    \"china\": \"China\",\n    \"colombia\": \"Colombia\",\n    \"columbia\": \"Colombia\",\n    \"comoros\": \"Comoros\",\n    \"cook islands\": \"Cook Islands\",\n    \"democratic republic of the congo\": \"Democratic Republic of the Congo\",\n    \"republic of the congo\": \"Republic of the Congo\",\n    \"congo\": \"Republic of the Congo\",\n    \"costa rica\": \"Costa Rica\",\n    \"cote d'ivoire\": \"Cote D'Ivoire\",\n    \"ivory coast\": \"Cote D'Ivoire\",\n    \"hr\": \"Croatia\",\n    \"hrv\": \"Croatia\",\n    \"croatia\": \"Croatia\",\n    \"cuba\": \"Cuba\",\n    \"cy\": \"Cyprus\",\n    \"cyp\": \"Cyprus\",\n    \"cyprus\": \"Cyprus\",\n    \"cz\": \"Czech Republic\",\n    \"cze\": \"Czech Republic\",\n    \"czech republic\": \"Czech Republic\",\n    \"dk\": \"Denmark\",\n    \"dnk\": \"Denmark\",\n    \"danmark\": \"Denmark\",\n    \"dnmk\": \"Denmark\",\n    \"denmark\": \"Denmark\",\n    \"djibouti\": \"Djibouti\",\n    \"dominica\": \"Dominica\",\n    \"Dominican Republic\": \"Dominican Republic\",\n    \"dr\": \"Dominican Republic\",\n    \"ecuador\": \"Ecuador\",\n    \"egypt\": \"Egypt\",\n    \"el salvador\": \"El Salvador\",\n    \"salvador\": \"El Salvador\",\n    \"equatorial guinea\": \"Equatorial Guinea\",\n    \"eritrea\": \"Eritrea\",\n    \"ee\": \"Estonia\",\n    \"est\": \"Estonia\",\n    \"estonia\": \"Estonia\",\n    \"ethopia\": \"Ethiopia\",\n    \"falkland islands\": \"Falkland Islands\",\n    \"faroe islands\": \"Faroe Islands\",\n    \"fiji\": \"Fiji\",\n    \"fi\": \"Finland\",\n    \"fin\": \"Finland\",\n    \"finland\": \"Finland\",\n    \"fr\": \"France\",\n    \"fra\": \"France\",\n    \"france\": \"France\",\n    \"french polynesia\": \"French Polynesia\",\n    \"french west indies\": \"French West Indies\",\n    \"gabon\": \"Gabon\",\n    \"gambia\": \"Gambia\",\n    \"ge\": \"Georgia\",\n    \"geo\": \"Georgia\",\n    \"georgia\": \"Georgia\",\n    \"de\": \"Germany\",\n    \"deu\": \"Germany\",\n    \"germany\": \"Germany\",\n    \"ghana\": \"Ghana\",\n    \"gibraltar\": \"Gibraltar\",\n    \"gr\": \"Greece\",\n    \"grc\": \"Greece\",\n    \"greece\": \"Greece\",\n    \"greenland\": \"Greenland\",\n    \"grenada\": \"Grenada\",\n    \"guam\": \"Guam\",\n    \"guatemala\": \"Guatemala\",\n    \"geurnsey\": \"Geurnsey\",\n    \"guinea\": \"Guinea\",\n    \"guinea-bissau\": \"Guinea-Bissau\",\n    \"guinea bissau\": \"Guinea-Bissau\",\n    \"guineabissau\": \"Guinea-Bissau\",\n    \"guyana\": \"Guyana\",\n    \"haiti\": \"Haiti\",\n    \"honduras\": \"Honduras\",\n    \"hong kong\": \"Hong Kong\",\n    \"hu\": \"Hungary\",\n    \"hun\": \"Hungary\",\n    \"hungary\": \"Hungary\",\n    \"is\": \"Iceland\",\n    \"isl\": \"Iceland\",\n    \"iceland\": \"Iceland\",\n    \"india\": \"India\",\n    \"indonesia\": \"Indonesia\",\n    \"iran\": \"Iran\",\n    \"iraq\": \"Iraq\",\n    \"ie\": \"Ireland\",\n    \"irl\": \"Ireland\",\n    \"ireland\": \"Ireland\",\n    \"isle of man\": \"Isle of Man\",\n    \"israel\": \"Israel\",\n    \"it\": \"Italy\",\n    \"ita\": \"Italy\",\n    \"italy\": \"Italy\",\n    \"jamaica\": \"Jamaica\",\n    \"japan\": \"Japan\",\n    \"jersey\": \"Jersey\",\n    \"jordan\": \"Jordan\",\n    \"kazakhstan\": \"Kazakhstan\",\n    \"kazakstan\": \"Kazakhstan\",\n    \"kenya\": \"Kenya\",\n    \"kiribati\": \"Kiribati\",\n    \"kosovo\": \"Kosovo\",\n    \"kuwait\": \"Kuwait\",\n    \"kyrgyzstan\": \"Kyrgystan\",\n    \"kyrgyz republic\": \"Kyrgyz Republic\",\n    \"kyrgyz\": \"Kyrgyz Republic\",\n    \"laos\": \"Laos\",\n    \"latvia\": \"Latvia\",\n    \"lebanon\": \"Lebanon\",\n    \"lesotho\": \"Lesotho\",\n    \"liberia\": \"Liberia\",\n    \"libya\": \"Libya\",\n    \"libia\": \"Libya\",\n    \"li\": \"Liechtenstein\",\n    \"lie\": \"Liechtenstein\",\n    \"liechtenstein\": \"Liechtenstein\",\n    \"lt\": \"Lithuania\",\n    \"ltu\": \"Lithuania\",\n    \"lithuania\": \"Lithuania\",\n    \"lu\": \"Luxembourg\",\n    \"lux\": \"Luxembourg\",\n    \"luxembourg\": \"Luxembourg\",\n    \"macau\": \"Macau\",\n    \"macedonia\": \"Macedonia\",\n    \"madagascar\": \"Madagascar\",\n    \"malawi\": \"Malawi\",\n    \"malaysia\": \"Malaysia\",\n    \"maldives\": \"Maldives\",\n    \"mali\": \"Mali\",\n    \"malta\": \"Malta\",\n    \"marshall islands\": \"Marshall Islands\",\n    \"mauritania\": \"Mauritania\",\n    \"mauritius\": \"Mauritius\",\n    \"mexico\": \"Mexico\",\n    \"mejico\": \"Mexico\",\n    \"micronesia\": \"Micronesia\",\n    \"moldova\": \"Moldova\",\n    \"monaco\": \"Monaco\",\n    \"mongolia\": \"Mongolia\",\n    \"montenegro\": \"Montenegro\",\n    \"montserrat\": \"Montserrat\",\n    \"montserat\": \"Montserrat\",\n    \"morocco\": \"Morocco\",\n    \"moroco\": \"Morocco\",\n    \"mozambique\": \"Mozambique\",\n    \"myanmar\": \"Myanmar\",\n    \"burma\": \"Myanmar\",\n    \"namibia\": \"Namibia\",\n    \"nauru\": \"Nauru\",\n    \"nepal\": \"Nepal\",\n    \"nl\": \"Netherlands\",\n    \"nld\": \"Netherlands\",\n    \"netherlands\": \"Netherlands\",\n    \"netherlands antilles\": \"Netherlands Antilles\",\n    \"antilles\": \"Netherlands Antilles\",\n    \"new caledonia\": \"New Caledonia\",\n    \"new zealand\": \"New Zealand\",\n    \"nicaragua\": \"Nicaragua\",\n    \"niger\": \"Niger\",\n    \"nigeria\": \"Nigeria\",\n    \"north korea\": \"North Korea\",\n    \"no\": \"Norway\",\n    \"nor\": \"Norway\",\n    \"norway\": \"Norway\",\n    \"oman\": \"Oman\",\n    \"ottoman empire\": \"Ottoman Empire\",\n    \"pakistan\": \"Pakistan\",\n    \"palau\": \"Palau\",\n    \"palestine\": \"Palestine\",\n    \"panama\": \"Panama\",\n    \"papua new guinea\": \"Papua New Guinea\",\n    \"papa new guinea\": \"Papua New Guinea\",\n    \"paraguay\": \"Paraguay\",\n    \"peru\": \"Peru\",\n    \"philippines\": \"Philippines\",\n    \"pl\": \"Poland\",\n    \"pol\": \"Poland\",\n    \"poland\": \"Poland\",\n    \"pt\": \"Portugal\",\n    \"prt\": \"Portugal\",\n    \"portugal\": \"Portugal\",\n    \"prussia\": \"Prussia\",\n    \"puerto rico\": \"Puerto Rico\",\n    \"porta rico\": \"Puerto Rico\",\n    \"porto rico\": \"Puerto Rico\",\n    \"qatar\": \"Qatar\",\n    \"reunion\": \"Reunion\",\n    \"ro\": \"Romania\",\n    \"rou\": \"Romania\",\n    \"romania\": \"Romania\",\n    \"ru\": \"Russia\",\n    \"rus\": \"Russia\",\n    \"russia\": \"Russia\",\n    \"rwanda\": \"Rwanda\",\n    \"saint kitts and nevis\": \"Saint Kitts and Nevis\",\n    \"st kitts and nevis\": \"Saint Kitts and Nevis\",\n    \"st. kitts and nevis\": \"Saint Kitts and Nevis\",\n    \"saint kitts & nevis\": \"Saint Kitts and Nevis\",\n    \"st kitts & nevis\": \"Saint Kitts and Nevis\",\n    \"st. kitts & nevix\": \"Saint Kitts and Nevis\",\n    \"saint lucia\": \"Saint Lucia\",\n    \"st lucia\": \"Saint Lucia\",\n    \"st. lucia\": \"Saint Luica\",\n    \"saint pierre and miquelon\": \"Saint Pierre and Miquelon\",\n    \"st pierre and miquelon\": \"Saint Pierre and Miquelon\",\n    \"st. pierre and miquelon\": \"Saint Pierre and Miquelon\",\n    \"saint pierre & miquelon\": \"Saint Pierre and Miquelon\",\n    \"st pierre & miquelon\": \"Saint Pierre and Miquelon\",\n    \"st. pierre & miquelon\": \"Saint Pierre and Miquelon\",\n    \"saint vincent and the grenadines\": \"Saint Vincent and the Grenadines\",\n    \"st vincent and the grenadines\": \"Saint Vincent and the Grenadines\",\n    \"st. vincent and the grenadines\": \"Saint Vincent and the Grenadines\",\n    \"saint vincent & the grenadines\": \"Saint Vincent and the Grenadines\",\n    \"st vincent & the grenadines\": \"Saint Vincent and the Grenadines\",\n    \"st. vincent & the grenadines\": \"Saint Vincent and the Grenadines\",\n    \"saint vincent and grenadines\": \"Saint Vincent and the Grenadines\",\n    \"st vincent and grenadines\": \"Saint Vincent and the Grenadines\",\n    \"st. vincent and grenadines\": \"Saint Vincent and the Grenadines\",\n    \"saint vincent & grenadines\": \"Saint Vincent and the Grenadines\",\n    \"st vincent & grenadines\": \"Saint Vincent and the Grenadines\",\n    \"st. vincent & grenadines\": \"Saint Vincent and the Grenadines\",\n    \"samoa\": \"Samoa\",\n    \"san marino\": \"San Marino\",\n    \"sao tome and principe\": \"Sao Tome and Principe\",\n    \"saint thomas and prince\": \"Sao Tome and Principe\",\n    \"sao tome & principe\": \"Sao Tome and Principe\",\n    \"saint thomas and principe\": \"Sao Tome and Principe\",\n    \"saint thomas & prince\": \"Sao Tome and Principe\",\n    \"saudi arabia\": \"Saudi Arabia\",\n    \"senegal\": \"Senegal\",\n    \"rs\": \"Serbia\",\n    \"srb\": \"Serbia\",\n    \"serbia\": \"Serbia\",\n    \"seychelles\": \"Seychelles\",\n    \"sierra leone\": \"Sierre Leone\",\n    \"singapore\": \"Singapore\",\n    \"sk\": \"Slovakia\",\n    \"svk\": \"Slovakia\",\n    \"slovakia\": \"Slovakia\",\n    \"si\": \"Slovenia\",\n    \"svn\": \"Slovenia\",\n    \"slovenia\": \"Slovenia\",\n    \"solomon islands\": \"Solomon Islands\",\n    \"somalia\": \"Somalia\",\n    \"south africa\": \"South Africa\",\n    \"south korea\": \"South Korea\",\n    \"south sudan\": \"South Sudan\",\n    \"es\": \"Spain\",\n    \"esp\": \"Spain\",\n    \"spain\": \"Spain\",\n    \"sri lanka\": \"Sri Lanka\",\n    \"sudan\": \"Sudan\",\n    \"suriname\": \"Suriname\",\n    \"swaziland\": \"Swaziland\",\n    \"se\": \"Sweden\",\n    \"see\": \"Sweden\",\n    \"swed\": \"Sweden\",\n    \"sweden\": \"Sweden\",\n    \"sverige\": \"Sweden\",\n    \"ch\": \"Switzerland\",\n    \"che\": \"Switzerland\",\n    \"switzerland\": \"Switzerland\",\n    \"syria\": \"Syria\",\n    \"taiwan\": \"Taiwan\",\n    \"tajikistan\": \"Tajikistan\",\n    \"tajikstan\": \"Tajikistan\",\n    \"tanzania\": \"Tanzania\",\n    \"thailand\": \"Thailand\",\n    \"timor-leste\": \"Timor-Leste\",\n    \"timor leste\": \"Timor-Leste\",\n    \"timorleste\": \"Timor-Leste\",\n    \"togo\": \"Togo\",\n    \"tonga\": \"Tonga\",\n    \"trinidad and tobago\": \"Trinidad and Tobago\",\n    \"trinidad & tobago\": \"Trinidad and Tobago\",\n    \"tunisia\": \"Tunisia\",\n    \"tr\": \"Turkey\",\n    \"tur\": \"Turkey\",\n    \"turkey\": \"Turkey\",\n    \"turkmenistan\": \"Turkmenistan\",\n    \"turkestan\": \"Turkmenistan\",\n    \"turks and caicos\": \"Turks and Caicos\",\n    \"turks & caicos\": \"Turks and Caicos\",\n    \"tuvalu\": \"Tuvalu\",\n    \"uganda\": \"Uganda\",\n    \"ua\": \"Ukraine\",\n    \"ukr\": \"Ukraine\",\n    \"ukraine\": \"Ukraine\",\n    \"united arab emirates\": \"United Arab Emirates\",\n    \"scotland\": \"United Kingdom\",\n    \"scot\": \"United Kingdom\",\n    \"gb\": \"United Kingdom\",\n    \"gbr\": \"United Kingdom\",\n    \"uk\": \"United Kingdom\",\n    \"en\": \"United Kingdom\",\n    \"eng\": \"United Kingdom\",\n    \"england\": \"United Kingdom\",\n    \"great britain\": \"United Kingdom\",\n    \"united kingdom\": \"United Kingdom\",\n    \"uruguay\": \"Uruguay\",\n    \"uzbekistan\": \"Uzbekistan\",\n    \"vanuatu\": \"Vanuatu\",\n    \"vanautu\": \"Vanuatu\",\n    \"vatican city\": \"Vatican City\",\n    \"holy see\": \"Vatican City\",\n    \"vatican\": \"Vatican City\",\n    \"the vatican\": \"Vatican City\",\n    \"the vatican city\": \"Vatican City\",\n    \"the holy see\": \"Vatican City\",\n    \"venezuela\": \"Venezuela\",\n    \"vietnam\": \"Vietnam\",\n    \"virgin islands\": \"Virgin Islands\",\n    \"yemen\": \"Yemen\",\n    \"zambia\": \"Zambia\",\n    \"zimbabwe\": \"Zimbabwe\",\n    \"rhodesia\": \"Zimbabwe\",\n    \"rodesia\": \"Zimbabwe\",\n    \"england\": \"England\",\n    \"scotland\": \"Scotland\",\n    \"wales\": \"Wales\",\n    \"northern ireland\": \"Northern Ireland\",\n    \"n ireland\": \"Northern Ireland\",\n    \"n. ireland\": \"Northern Ireland\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9kYXRhL2ZzZGF0YXN0cnVjdHVyZXMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZSxNQUFNQSxJQUFJO0lBQ3JCQyxhQUFhO1FBQ2YsbUNBQW1DO1FBQ25DLElBQUksQ0FBQ0MsU0FBUyxHQUFHLElBQUlDLEdBQUcsRUFBRSxDQUFDO0tBQzNCO0lBRURDLFVBQVUsQ0FBQ0YsU0FBUyxFQUFFO1FBQ3JCLElBQUksQ0FBQ0EsU0FBUyxHQUFHQSxTQUFTLENBQUM7S0FDM0I7SUFFRUcsU0FBUyxHQUFHLFNBQVNDLE1BQU0sRUFBRTtRQUN6QixJQUFJLENBQUNKLFNBQVMsQ0FBQ0ssR0FBRyxDQUFDRCxNQUFNLENBQUNFLEtBQUssRUFBRUYsTUFBTSxDQUFDLENBQUM7S0FDNUM7SUFDSkcsU0FBUyxHQUFHLFNBQVNELEtBQUssRUFBRTtRQUMzQixPQUFPLElBQUksQ0FBQ04sU0FBUyxDQUFDUSxHQUFHLENBQUNGLEtBQUssQ0FBQ0csUUFBUSxFQUFFLENBQUMsQ0FBQztLQUM1QztJQUNEQyxTQUFTLEdBQUcsU0FBU0osS0FBSyxFQUFFO1FBQzNCLElBQUlGLE1BQU0sR0FBRyxJQUFJLENBQUNHLFNBQVMsQ0FBQ0QsS0FBSyxDQUFDO1FBQ2xDLElBQUlGLE1BQU0sSUFBSSxJQUFJLEVBQUU7WUFBRSxPQUFPLElBQUksQ0FBQztTQUFFO1FBQ3BDLElBQUlBLE1BQU0sQ0FBQ08sTUFBTSxJQUFJLE1BQU0sRUFBRTtZQUM1QixJQUFJQyxNQUFNLEdBQUcsSUFBSSxDQUFDTCxTQUFTLENBQUNELEtBQUssR0FBRyxDQUFDLENBQUM7WUFDdEMsSUFBSU0sTUFBTSxDQUFDRCxNQUFNLElBQUksUUFBUSxFQUFFO2dCQUFFLE9BQU9DLE1BQU0sQ0FBQzthQUFFLE1BQzVDO2dCQUFFLE9BQU8sSUFBSSxDQUFDO2FBQUU7U0FDckIsTUFDSTtZQUFFLE9BQU8sSUFBSSxDQUFDTCxTQUFTLENBQUNELEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQztTQUFFO0tBRTFDO0lBQ0RPLFNBQVMsR0FBRyxTQUFTUCxLQUFLLEVBQUU7UUFDM0IsSUFBSVEsS0FBSyxHQUFHLElBQUksQ0FBQ1AsU0FBUyxDQUFDRCxLQUFLLENBQUM7UUFDakMsSUFBSVEsS0FBSyxJQUFJLElBQUksRUFBRTtZQUFFLE9BQU8sSUFBSSxDQUFDO1NBQUU7UUFDbkMsSUFBSUMsTUFBTSxHQUFJLENBQUMsR0FBR1QsS0FBSztRQUN2QixPQUFPLElBQUksQ0FBQ0MsU0FBUyxDQUFDUSxNQUFNLENBQUMsQ0FBQztLQUM5QjtJQUNEQyxTQUFTLEdBQUcsU0FBU1YsS0FBSyxFQUFFO1FBQzNCLElBQUlRLEtBQUssR0FBRyxJQUFJLENBQUNQLFNBQVMsQ0FBQ0QsS0FBSyxDQUFDO1FBQ2pDLElBQUlRLEtBQUssSUFBSSxJQUFJLEVBQUU7WUFBRSxPQUFPLElBQUksQ0FBQztTQUFFO1FBQ25DLElBQUlHLE1BQU0sR0FBRyxDQUFFLEdBQUdYLEtBQUssR0FBSSxDQUFDO1FBQzVCLE9BQU8sSUFBSSxDQUFDQyxTQUFTLENBQUNVLE1BQU0sQ0FBQyxDQUFDO0tBQzlCO0lBQ0RDLFFBQVEsR0FBRyxTQUFTWixLQUFLLEVBQUU7UUFDMUIsSUFBSWEsTUFBTSxHQUFHLElBQUksQ0FBQ1osU0FBUyxDQUFDRCxLQUFLLENBQUM7UUFDbEMsSUFBSWEsTUFBTSxJQUFJLElBQUksRUFBRTtZQUFFLE9BQU8sSUFBSSxDQUFDO1NBQUU7UUFDcEMsSUFBSUEsTUFBTSxDQUFDUixNQUFNLElBQUksTUFBTSxFQUFFO1lBQUUsT0FBTyxJQUFJLENBQUNKLFNBQVMsQ0FBQ0QsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDO1NBQUUsTUFDN0Q7WUFBQyxPQUFPLElBQUksQ0FBQ0MsU0FBUyxDQUFDLENBQUNELEtBQUssR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztTQUFFO0tBQy9DO0lBRURjLG1CQUFtQixHQUFHLFNBQVNDLGFBQWEsRUFBRTtRQUM3QyxJQUFJQyxNQUFNLEdBQUcsSUFBSXJCLEdBQUcsRUFBRTtRQUN0QixLQUFLLE1BQU1HLE1BQU0sSUFBSSxJQUFJLENBQUNKLFNBQVMsQ0FBQ3VCLE1BQU0sRUFBRSxDQUFFO1lBQzdDRCxNQUFNLENBQUNqQixHQUFHLENBQUNELE1BQU0sQ0FBQ29CLEdBQUcsRUFBRXBCLE1BQU0sQ0FBQ0UsS0FBSyxDQUFDLENBQUM7U0FDckM7UUFFRCxLQUFLLE1BQU1tQixZQUFZLElBQUlKLGFBQWEsQ0FBQztZQUN4QyxJQUFJLENBQUNJLFlBQVksQ0FBQ0MsS0FBSyxFQUFFLFNBQVM7WUFDbEMsSUFBSUQsWUFBWSxDQUFDQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUNDLElBQUksSUFBSSw2QkFBNkIsRUFBRTtnQkFDaEUsSUFBSUMsT0FBTyxHQUFHLElBQUksQ0FBQzVCLFNBQVMsQ0FBQ1EsR0FBRyxDQUFDYyxNQUFNLENBQUNkLEdBQUcsQ0FBQ2lCLFlBQVksQ0FBQ0csT0FBTyxDQUFDQyxVQUFVLENBQUMsQ0FBQztnQkFDN0UsSUFBSUMsT0FBTyxHQUFHLElBQUksQ0FBQzlCLFNBQVMsQ0FBQ1EsR0FBRyxDQUFDYyxNQUFNLENBQUNkLEdBQUcsQ0FBQ2lCLFlBQVksQ0FBQ0ssT0FBTyxDQUFDRCxVQUFVLENBQUMsQ0FBQztnQkFDN0UsSUFBSUQsT0FBTyxJQUFJRSxPQUFPLElBQUlMLFlBQVksQ0FBQ0MsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDSyxJQUFJLEVBQUVILE9BQU8sQ0FBQ0ksZUFBZSxDQUFDUCxZQUFZLENBQUNDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQ0ssSUFBSSxDQUFDRSxRQUFRLENBQUMsQ0FBQztnQkFDbkgsSUFBSUwsT0FBTyxJQUFJRSxPQUFPLElBQUlMLFlBQVksQ0FBQ0MsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDUSxLQUFLLEVBQUVOLE9BQU8sQ0FBQ08sZ0JBQWdCLENBQUNWLFlBQVksQ0FBQ0MsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDUSxLQUFLLENBQUNELFFBQVEsQ0FBQyxDQUFDO2dCQUN0SCxJQUFJTCxPQUFPLElBQUlFLE9BQU8sSUFBSUwsWUFBWSxDQUFDQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUNLLElBQUksRUFBRUQsT0FBTyxDQUFDRSxlQUFlLENBQUNQLFlBQVksQ0FBQ0MsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDSyxJQUFJLENBQUNFLFFBQVEsQ0FBQyxDQUFDO2dCQUNuSCxJQUFJTCxPQUFPLElBQUlFLE9BQU8sSUFBSUwsWUFBWSxDQUFDQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUNRLEtBQUssRUFBRUosT0FBTyxDQUFDSyxnQkFBZ0IsQ0FBQ1YsWUFBWSxDQUFDQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUNRLEtBQUssQ0FBQ0QsUUFBUSxDQUFDLENBQUM7YUFDdEg7U0FDRDs7S0FDRDtDQUNEO0FBRU0sTUFBTUcsTUFBTTtJQUNmckMsWUFBWXNDLElBQUksQ0FBRTtRQUVoQixJQUFJLENBQUNDLElBQUksR0FBRyxJQUFJQyxJQUFJLENBQUNGLElBQUksQ0FBQyxDQUFDO1FBQzVCLElBQUksQ0FBQzFCLE1BQU0sR0FBRzBCLElBQUksQ0FBQ0csT0FBTyxDQUFDN0IsTUFBTSxDQUFDO1FBQ3BDLElBQUksQ0FBQzhCLE1BQU0sR0FBR0osSUFBSSxDQUFDSSxNQUFNLENBQUM7UUFFMUIsSUFBSSxDQUFDbkMsS0FBSyxHQUFHb0MsUUFBUSxDQUFDTCxJQUFJLENBQUNHLE9BQU8sQ0FBQ0csZ0JBQWdCLENBQUMsSUFBSUMsU0FBUyxDQUFDLENBQUMsZUFBZTtRQUMvRSxJQUFJLENBQUNDLFVBQVUsR0FBRyxDQUFDLElBQUksQ0FBQ3ZDLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQ0csUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDcUMsTUFBTSxDQUFDO1FBQzFELElBQUksQ0FBQ3RCLEdBQUcsR0FBR2EsSUFBSSxDQUFDVSxFQUFFLENBQUMsQ0FBQyxRQUFRO1FBRTVCLElBQUksQ0FBQ0MsU0FBUyxHQUFHLElBQUlDLE1BQU0sQ0FBQ1osSUFBSSxDQUFDRyxPQUFPLENBQUNRLFNBQVMsQ0FBQyxDQUFDO1FBQ3BELElBQUksQ0FBQ0UsU0FBUyxHQUFHLElBQUlELE1BQU0sQ0FBQ1osSUFBSSxDQUFDRyxPQUFPLENBQUNVLFNBQVMsQ0FBQyxDQUFDO1FBRXBELElBQUksQ0FBQ0MsVUFBVSxHQUFHQyxjQUFjLENBQUNmLElBQUksQ0FBQ0csT0FBTyxDQUFDVyxVQUFVLENBQUMsQ0FBQztRQUMxRCxJQUFJLENBQUNFLFVBQVUsR0FBR0QsY0FBYyxDQUFDZixJQUFJLENBQUNHLE9BQU8sQ0FBQ2EsVUFBVSxDQUFDLENBQUM7UUFFMUQsSUFBSUMsYUFBYSxHQUFHakIsSUFBSSxDQUFDRyxPQUFPLENBQUNlLFFBQVEsQ0FBQ0MsS0FBSyxDQUFDLEdBQUcsQ0FBQztRQUNwRCxJQUFJQyxhQUFhLEdBQUdILGFBQWEsQ0FBQ1IsTUFBTSxHQUFHLENBQUMsR0FBR0osUUFBUSxDQUFDWSxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBR1YsU0FBUztRQUNyRixJQUFJYyxhQUFhLEdBQUdKLGFBQWEsQ0FBQ1IsTUFBTSxHQUFHLENBQUMsR0FBR0osUUFBUSxDQUFDWSxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBR1YsU0FBUztRQUVyRixJQUFJLENBQUNXLFFBQVEsR0FBRztZQUNkSSxNQUFNLEVBQUV0QixJQUFJLENBQUNHLE9BQU8sQ0FBQ2UsUUFBUTtZQUM3QkssS0FBSyxFQUFFSCxhQUFhO1lBQ3BCSSxLQUFLLEVBQUVILGFBQWE7WUFDcEJJLEtBQUssRUFBRUwsYUFBYSxJQUFJQyxhQUFhLEdBQUdBLGFBQWEsR0FBR0QsYUFBYSxHQUFHYixTQUFTO1lBQ2pGbkMsUUFBUSxFQUFFLFdBQVc7Z0JBQUUsT0FBTyxJQUFJLENBQUNrRCxNQUFNLENBQUM7YUFBRTtZQUM1Q0ksTUFBTSxFQUFFLFNBQVNDLEtBQUssRUFBRTtnQkFDdEIsT0FBT0EsS0FBSyxDQUFDSixLQUFLLElBQUksSUFBSSxDQUFDQSxLQUFLLElBQUlJLEtBQUssQ0FBQ0gsS0FBSyxJQUFJLElBQUksQ0FBQ0EsS0FBSyxDQUFDO2FBQy9EO1NBQ0Y7UUFFRixJQUFJLENBQUNJLFVBQVUsR0FBR0MsYUFBYSxDQUFDN0IsSUFBSSxDQUFDLENBQUM7S0FDbkM7SUFFSkwsZUFBZSxHQUFHLFNBQVNtQyxZQUFZLEVBQUU7UUFDeEMsSUFBSSxDQUFDQSxZQUFZLEdBQUcsSUFBSWxCLE1BQU0sQ0FBQ2tCLFlBQVksQ0FBQyxDQUFDO0tBQzdDO0lBRURoQyxnQkFBZ0IsR0FBRyxTQUFTaUMsYUFBYSxFQUFFO1FBQzFDLElBQUksQ0FBQ0EsYUFBYSxHQUFHaEIsY0FBYyxDQUFDZ0IsYUFBYSxDQUFDLENBQUM7S0FDbkQ7Q0FDRDtBQUVELE1BQU1uQixNQUFNO0lBQ1JsRCxZQUFZZ0MsSUFBSSxDQUFFO1FBQ2QsSUFBSXNDLEdBQUcsRUFBRUMsS0FBSyxFQUFFQyxJQUFJO1FBRXBCLElBQUl4QyxJQUFJLEVBQUU7WUFDTixJQUFJeUMsR0FBRyxHQUFHekMsSUFBSSxDQUFDeUIsS0FBSyxDQUFDLEdBQUcsQ0FBQztZQUN6QixJQUFLLElBQUlpQixDQUFDLElBQUlELEdBQUcsQ0FBRTtnQkFDZixJQUFJRSxJQUFJLEdBQUdGLEdBQUcsQ0FBQ0MsQ0FBQyxDQUFDO2dCQUNqQixJQUFJRSxHQUFHLEdBQUdqQyxRQUFRLENBQUNnQyxJQUFJLENBQUM7Z0JBQ3hCLElBQUlDLEdBQUcsR0FBRyxDQUFDLElBQUlBLEdBQUcsR0FBRyxFQUFFLEVBQ25CTixHQUFHLEdBQUdNLEdBQUcsQ0FBQ2xFLFFBQVEsRUFBRSxDQUFDO3FCQUNwQixJQUFJbUUsS0FBSyxDQUFDRCxHQUFHLENBQUMsRUFDZkwsS0FBSyxHQUFHTyxNQUFNLENBQUNILElBQUksQ0FBQ0ksV0FBVyxFQUFFLENBQUMsQ0FBQztxQkFDbEMsSUFBSUosSUFBSSxDQUFDNUIsTUFBTSxJQUFJLENBQUMsRUFDckJ5QixJQUFJLEdBQUdHLElBQUksQ0FBQzthQUNuQjtTQUNQO1FBRUUsSUFBSSxDQUFDTCxHQUFHLEdBQUdBLEdBQUcsQ0FBQztRQUNmLElBQUksQ0FBQ0MsS0FBSyxHQUFHQSxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDQyxJQUFJLEdBQUdBLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUN0QyxRQUFRLEdBQUdGLElBQUksQ0FBQztLQUN4QjtDQUNKO0FBRUQsSUFBSThDLE1BQU0sR0FBRztJQUNaLFNBQVMsRUFBQyxTQUFTO0lBQ25CLEtBQUssRUFBQyxTQUFTO0lBQ2YsVUFBVSxFQUFDLFVBQVU7SUFDckIsS0FBSyxFQUFDLFVBQVU7SUFDaEIsS0FBSyxFQUFDLE9BQU87SUFDYixPQUFPLEVBQUMsT0FBTztJQUNmLEtBQUssRUFBQyxPQUFPO0lBQ2IsT0FBTyxFQUFDLE9BQU87SUFDZixLQUFLLEVBQUMsS0FBSztJQUNYLEtBQUssRUFBQyxNQUFNO0lBQ1osTUFBTSxFQUFDLE1BQU07SUFDYixNQUFNLEVBQUMsTUFBTTtJQUNiLEtBQUssRUFBQyxNQUFNO0lBQ1osUUFBUSxFQUFDLFFBQVE7SUFDakIsS0FBSyxFQUFDLFFBQVE7SUFDZCxXQUFXLEVBQUMsV0FBVztJQUN2QixNQUFNLEVBQUMsV0FBVztJQUNsQixTQUFTLEVBQUMsU0FBUztJQUNuQixLQUFLLEVBQUMsU0FBUztJQUNmLFVBQVUsRUFBQyxVQUFVO0lBQ3JCLEtBQUssRUFBQyxVQUFVO0lBQ2hCLFVBQVUsRUFBQyxVQUFVO0lBQ3JCLEtBQUssRUFBQyxVQUFVO0NBQ2hCO0FBRUQsTUFBTXRDLElBQUk7SUFDTnhDLFlBQVlLLE1BQU0sQ0FBRTtRQUNoQixJQUFJMkUsS0FBSztRQUNULElBQUlDLE9BQU87UUFFWCxJQUFJQyxLQUFLLEdBQUc3RSxNQUFNLENBQUM2RSxLQUFLO1FBQ3hCLElBQUlBLEtBQUssRUFBRTtZQUNQLElBQUlDLGtCQUFrQixHQUFHLENBQUM7WUFDMUIsSUFBSUMsT0FBTyxHQUFHLENBQUM7WUFDZixNQUFPQSxPQUFPLEdBQUdGLEtBQUssQ0FBQ25DLE1BQU0sSUFBSSxDQUFDbUMsS0FBSyxDQUFDRSxPQUFPLENBQUMsQ0FBQ0MsU0FBUyxDQUFFO2dCQUN4REQsT0FBTyxFQUFFO2FBQ1o7WUFDRCxJQUFJRixLQUFLLENBQUNFLE9BQU8sQ0FBQyxDQUFDQyxTQUFTLEVBQUU7Z0JBQzFCRixrQkFBa0IsR0FBR0MsT0FBTzthQUMvQjtZQUNELElBQUlFLEtBQUssR0FBR0osS0FBSyxDQUFDQyxrQkFBa0IsQ0FBQyxDQUFDSSxTQUFTO1lBQy9DLElBQUlELEtBQUssSUFBSUEsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFO2dCQUNuQixJQUFJRSxLQUFLLEdBQUdGLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQ0UsS0FBSztnQkFDMUIsSUFBSyxJQUFJZCxDQUFDLElBQUljLEtBQUssQ0FBRTtvQkFDakIsSUFBSUEsS0FBSyxDQUFDZCxDQUFDLENBQUMsQ0FBQzlDLElBQUksS0FBSywwQkFBMEIsRUFBRTt3QkFDOUMsSUFBSVcsSUFBSSxHQUFHaUQsS0FBSyxDQUFDZCxDQUFDLENBQUMsQ0FBQ2UsS0FBSzt3QkFDekIsSUFBSWxELElBQUksQ0FBQ3dDLFdBQVcsRUFBRSxLQUFLLFNBQVMsRUFBRTs0QkFDbENDLEtBQUssR0FBR3pDLElBQUk7eUJBQ2Y7cUJBQ0osTUFDSSxJQUFJaUQsS0FBSyxDQUFDZCxDQUFDLENBQUMsQ0FBQzlDLElBQUksS0FBSyw0QkFBNEIsRUFBRTt3QkFDckQsSUFBSVcsSUFBSSxHQUFHaUQsS0FBSyxDQUFDZCxDQUFDLENBQUMsQ0FBQ2UsS0FBSzt3QkFDekIsSUFBSWxELElBQUksQ0FBQ3dDLFdBQVcsRUFBRSxLQUFLLFNBQVMsRUFBRTs0QkFDbENFLE9BQU8sR0FBRzFDLElBQUksQ0FBQzt5QkFDbEI7cUJBQ0o7aUJBQ0o7YUFDSjtTQUNKO1FBRUQsSUFBSSxDQUFDbUQsSUFBSSxHQUFHckYsTUFBTSxDQUFDb0MsT0FBTyxDQUFDRixJQUFJLENBQUM7UUFDaEMsSUFBSSxDQUFDeUMsS0FBSyxHQUFHQSxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDVyxLQUFLLEdBQUdYLEtBQUssR0FBR0EsS0FBSyxDQUFDdkIsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHWixTQUFTLENBQUM7UUFDckQsd0VBQXdFO1FBQ3hFLElBQUksQ0FBQytDLElBQUksR0FBR1gsT0FBTyxDQUFDO1FBQ3hCLElBQUksQ0FBQ1ksY0FBYyxHQUFHLENBQUMsSUFBSSxDQUFDRixLQUFLLENBQUNHLE9BQU8sUUFBUSxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUNGLElBQUksQ0FBQ0UsT0FBTyxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUNDLFdBQVcsRUFBRSxDQUFDO1FBQ25HLHdFQUF3RTtRQUNwRSxJQUFJLENBQUNDLE1BQU0sR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDTixJQUFJLElBQUksQ0FBQyxDQUFDVixLQUFLLElBQUksQ0FBQyxDQUFDQyxPQUFPLENBQUM7S0FDckQ7Q0FDSjtBQUVELElBQUk1QixjQUFjLEdBQUcsU0FBU2xCLEtBQUssRUFBRTtJQUNwQyxJQUFJQSxLQUFLLEVBQUU7UUFDVixJQUFJOEQsS0FBSyxHQUFHOUQsS0FBSyxDQUFDc0IsS0FBSyxRQUFRO1FBRS9CLElBQUl5QyxPQUFPLEdBQUdDLFVBQVUsQ0FBQ2hFLEtBQUssQ0FBQztRQUMvQixJQUFJK0QsT0FBTyxFQUNWRCxLQUFLLENBQUNBLEtBQUssQ0FBQ2xELE1BQU0sR0FBRyxDQUFDLENBQUMsR0FBR21ELE9BQU8sQ0FBQztRQUVuQyxtQkFBbUI7UUFDbkIsSUFBSyxJQUFJeEIsQ0FBQyxJQUFJdUIsS0FBSyxDQUFFO1lBQ3BCLElBQUssSUFBSUcsQ0FBQyxJQUFJSCxLQUFLLENBQUU7Z0JBQ3BCLElBQUl2QixDQUFDLElBQUkwQixDQUFDLElBQUlILEtBQUssQ0FBQ3ZCLENBQUMsQ0FBQyxJQUFJdUIsS0FBSyxDQUFDRyxDQUFDLENBQUMsRUFBRTtvQkFDbkNILEtBQUssQ0FBQ0ksTUFBTSxDQUFDM0IsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO2lCQUNuQjthQUNEO1NBQ0Q7UUFFRCxlQUFlO1FBQ2YsSUFBSyxJQUFJQSxDQUFDLElBQUl1QixLQUFLLENBQUU7WUFDcEIsSUFBSUEsS0FBSyxDQUFDdkIsQ0FBQyxDQUFDLENBQUM0QixNQUFNLFlBQVksR0FBRyxDQUFDLEVBQ2xDTCxLQUFLLENBQUNJLE1BQU0sQ0FBQzNCLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztTQUNwQjtRQUVELElBQUl1QixLQUFLLENBQUNsRCxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQ3JCa0QsS0FBSyxDQUFDSSxNQUFNLENBQUMsQ0FBQyxFQUFFSixLQUFLLENBQUNsRCxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7U0FDbEM7UUFFRCxPQUFPa0QsS0FBSyxDQUFDTSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDeEI7Q0FDRDtBQUVELFNBQVNwQyxhQUFhLENBQUM5RCxNQUFNLEVBQUU7SUFDOUIsSUFBSSxDQUFDQSxNQUFNLENBQUNzQixLQUFLLElBQUksQ0FBQ3RCLE1BQU0sQ0FBQ3NCLEtBQUssQ0FBQ29CLE1BQU0sRUFBRSxPQUFPRixTQUFTO0lBQzNELEtBQUssSUFBSTJELENBQUMsSUFBSW5HLE1BQU0sQ0FBQ3NCLEtBQUssQ0FBRTtRQUMzQixJQUFJNkUsQ0FBQyxDQUFDNUUsSUFBSSxJQUFJLCtCQUErQixJQUFJNEUsQ0FBQyxDQUFDZixLQUFLLEVBQUU7WUFDekQsSUFBSWUsQ0FBQyxDQUFDZixLQUFLLENBQUNnQixRQUFRLENBQUMsU0FBUyxDQUFDLElBQUlELENBQUMsQ0FBQ2YsS0FBSyxDQUFDZ0IsUUFBUSxDQUFDLFNBQVMsQ0FBQyxFQUFFLFNBQVM7WUFDekUsT0FBT0QsQ0FBQyxDQUFDZixLQUFLLENBQUM7U0FDZjtLQUNEO0lBQ0QsT0FBTzVDLFNBQVM7Q0FDaEI7QUFFRCxTQUFTc0QsVUFBVSxDQUFDaEUsS0FBSyxFQUFFO0lBQzFCLElBQUlBLEtBQUssRUFBRTtRQUNWLElBQUlzQyxHQUFHLEdBQUd0QyxLQUFLLENBQUNzQixLQUFLLFFBQVE7UUFDN0IsSUFBSWlELEdBQUcsR0FBR2pDLEdBQUcsQ0FBQ0EsR0FBRyxDQUFDMUIsTUFBTSxHQUFDLENBQUMsQ0FBQyxDQUFDZ0MsV0FBVyxFQUFFLENBQUN0QixLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM4QyxJQUFJLENBQUMsRUFBRSxDQUFDO1FBQzdELE9BQU9JLFVBQVUsQ0FBQ0QsR0FBRyxDQUFDLENBQUM7S0FDdkI7SUFDRCxPQUFPN0QsU0FBUztDQUNoQjtBQUVELElBQUk4RCxVQUFVLEdBQUc7SUFDaEIsSUFBSSxFQUFDLGVBQWU7SUFDcEIsS0FBSyxFQUFDLGVBQWU7SUFDckIsZUFBZSxFQUFDLGVBQWU7SUFDL0IsMEJBQTBCLEVBQUMsZUFBZTtJQUMxQyxTQUFTLEVBQUMsZUFBZTtJQUN6QixJQUFJLEVBQUMsZUFBZTtJQUNwQixRQUFRLEVBQUMsZUFBZTtJQUN4QixJQUFJLEVBQUMsZUFBZTtJQUNwQixTQUFTLEVBQUMsZUFBZTtJQUN6QixJQUFJLEVBQUMsZUFBZTtJQUNwQixVQUFVLEVBQUMsZUFBZTtJQUMxQixJQUFJLEVBQUMsZUFBZTtJQUNwQixZQUFZLEVBQUMsZUFBZTtJQUM1QixJQUFJLEVBQUMsZUFBZTtJQUNwQixLQUFLLEVBQUMsZUFBZTtJQUNyQixVQUFVLEVBQUMsZUFBZTtJQUMxQixJQUFJLEVBQUMsZUFBZTtJQUNwQixhQUFhLEVBQUMsZUFBZTtJQUM3QixJQUFJLEVBQUMsZUFBZTtJQUNwQixNQUFNLEVBQUMsZUFBZTtJQUN0QixVQUFVLEVBQUMsZUFBZTtJQUMxQixJQUFJLEVBQUMsZUFBZTtJQUNwQixTQUFTLEVBQUMsZUFBZTtJQUN6QixJQUFJLEVBQUMsZUFBZTtJQUNwQixTQUFTLEVBQUMsZUFBZTtJQUN6QixJQUFJLEVBQUMsZUFBZTtJQUNwQixRQUFRLEVBQUMsZUFBZTtJQUN4QixJQUFJLEVBQUMsZUFBZTtJQUNwQixPQUFPLEVBQUMsZUFBZTtJQUN2QixJQUFJLEVBQUMsZUFBZTtJQUNwQixVQUFVLEVBQUMsZUFBZTtJQUMxQixJQUFJLEVBQUMsZUFBZTtJQUNwQixTQUFTLEVBQUMsZUFBZTtJQUN6QixJQUFJLEVBQUMsZUFBZTtJQUNwQixNQUFNLEVBQUMsZUFBZTtJQUN0QixJQUFJLEVBQUMsZUFBZTtJQUNwQixRQUFRLEVBQUMsZUFBZTtJQUN4QixJQUFJLEVBQUMsZUFBZTtJQUNwQixVQUFVLEVBQUMsZUFBZTtJQUMxQixJQUFJLEVBQUMsZUFBZTtJQUNwQixZQUFZLEVBQUMsZUFBZTtJQUM1QixJQUFJLEVBQUMsZUFBZTtJQUNwQixNQUFNLEVBQUMsZUFBZTtJQUN0QixJQUFJLEVBQUMsZUFBZTtJQUNwQixVQUFVLEVBQUMsZUFBZTtJQUMxQixJQUFJLEVBQUMsZUFBZTtJQUNwQixlQUFlLEVBQUMsZUFBZTtJQUMvQixJQUFJLEVBQUMsZUFBZTtJQUNwQixVQUFVLEVBQUMsZUFBZTtJQUMxQixJQUFJLEVBQUMsZUFBZTtJQUNwQixXQUFXLEVBQUMsZUFBZTtJQUMzQixJQUFJLEVBQUMsZUFBZTtJQUNwQixhQUFhLEVBQUMsZUFBZTtJQUM3QixJQUFJLEVBQUMsZUFBZTtJQUNwQixVQUFVLEVBQUMsZUFBZTtJQUMxQixJQUFJLEVBQUMsZUFBZTtJQUNwQixTQUFTLEVBQUMsZUFBZTtJQUN6QixJQUFJLEVBQUMsZUFBZTtJQUNwQixVQUFVLEVBQUMsZUFBZTtJQUMxQixJQUFJLEVBQUMsZUFBZTtJQUNwQixRQUFRLEVBQUMsZUFBZTtJQUN4QixJQUFJLEVBQUMsZUFBZTtJQUNwQixlQUFlLEVBQUMsZUFBZTtJQUMvQixJQUFJLEVBQUMsZUFBZTtJQUNwQixZQUFZLEVBQUMsZUFBZTtJQUM1QixJQUFJLEVBQUMsZUFBZTtJQUNwQixZQUFZLEVBQUMsZUFBZTtJQUM1QixJQUFJLEVBQUMsZUFBZTtJQUNwQixVQUFVLEVBQUMsZUFBZTtJQUMxQixJQUFJLEVBQUMsZUFBZTtJQUNwQixnQkFBZ0IsRUFBQyxlQUFlO0lBQ2hDLElBQUksRUFBQyxlQUFlO0lBQ3BCLGNBQWMsRUFBQyxlQUFlO0lBQzlCLElBQUksRUFBQyxlQUFlO0lBQ3BCLE1BQU0sRUFBQyxlQUFlO0lBQ3RCLElBQUksRUFBQyxlQUFlO0lBQ3BCLFVBQVUsRUFBQyxlQUFlO0lBQzFCLElBQUksRUFBQyxlQUFlO0lBQ3BCLFFBQVEsRUFBQyxlQUFlO0lBQ3hCLElBQUksRUFBQyxl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cyI6WyJ3ZWJwYWNrOi8vZmFtaWx5dGVjaC1nYW1lcy8uL2RhdGEvZnNkYXRhc3RydWN0dXJlcy5qcz80OTBjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIFRyZWUge1xuICAgIGNvbnN0cnVjdG9yKCl7XG5cdFx0Ly9tYXAgb2YgYXNjZW5kYW5jeSBudW1iZXIgdG8gaW5kZXhcblx0XHR0aGlzLnBlcnNvbk1hcCA9IG5ldyBNYXAoKTtcblx0fVxuXG5cdHNldFBlcnNvbnMocGVyc29uTWFwKSB7XG5cdFx0dGhpcy5wZXJzb25NYXAgPSBwZXJzb25NYXA7XG5cdH1cbiAgICBcbiAgICBhZGRQZXJzb24gPSBmdW5jdGlvbihwZXJzb24pIHtcbiAgICAgICAgdGhpcy5wZXJzb25NYXAuc2V0KHBlcnNvbi5hX251bSwgcGVyc29uKTtcbiAgICB9XG5cdGdldFBlcnNvbiA9IGZ1bmN0aW9uKGFfbnVtKSB7XG5cdFx0cmV0dXJuIHRoaXMucGVyc29uTWFwLmdldChhX251bS50b1N0cmluZygpKTtcblx0fVxuXHRnZXRTcG91c2UgPSBmdW5jdGlvbihhX251bSkge1xuXHRcdGxldCBwZXJzb24gPSB0aGlzLmdldFBlcnNvbihhX251bSk7XG5cdFx0aWYgKHBlcnNvbiA9PSBudWxsKSB7IHJldHVybiBudWxsOyB9XG5cdFx0aWYgKHBlcnNvbi5nZW5kZXIgPT0gXCJNYWxlXCIpIHtcblx0XHRcdGxldCBzcG91c2UgPSB0aGlzLmdldFBlcnNvbihhX251bSArIDEpO1xuXHRcdFx0aWYgKHNwb3VzZS5nZW5kZXIgPT0gXCJGZW1hbGVcIikgeyByZXR1cm4gc3BvdXNlOyB9XG5cdFx0XHRlbHNlIHsgcmV0dXJuIG51bGw7IH1cblx0XHR9XG5cdFx0ZWxzZSB7IHJldHVybiB0aGlzLmdldFBlcnNvbihhX251bSAtIDEpOyB9XG5cdFx0XG5cdH1cblx0Z2V0RmF0aGVyID0gZnVuY3Rpb24oYV9udW0pIHtcblx0XHRsZXQgY2hpbGQgPSB0aGlzLmdldFBlcnNvbihhX251bSk7XG5cdFx0aWYgKGNoaWxkID09IG51bGwpIHsgcmV0dXJuIG51bGw7IH1cblx0XHRsZXQgZmFfbnVtID0gKDIgKiBhX251bSk7XG5cdFx0cmV0dXJuIHRoaXMuZ2V0UGVyc29uKGZhX251bSk7XG5cdH1cblx0Z2V0TW90aGVyID0gZnVuY3Rpb24oYV9udW0pIHtcblx0XHRsZXQgY2hpbGQgPSB0aGlzLmdldFBlcnNvbihhX251bSk7XG5cdFx0aWYgKGNoaWxkID09IG51bGwpIHsgcmV0dXJuIG51bGw7IH1cblx0XHRsZXQgbWFfbnVtID0gKDIgKiBhX251bSkgKyAxO1xuXHRcdHJldHVybiB0aGlzLmdldFBlcnNvbihtYV9udW0pO1xuXHR9XG5cdGdldENoaWxkID0gZnVuY3Rpb24oYV9udW0pIHtcblx0XHRsZXQgcGFyZW50ID0gdGhpcy5nZXRQZXJzb24oYV9udW0pO1xuXHRcdGlmIChwYXJlbnQgPT0gbnVsbCkgeyByZXR1cm4gbnVsbDsgfVxuXHRcdGlmIChwYXJlbnQuZ2VuZGVyID09IFwiTWFsZVwiKSB7IHJldHVybiB0aGlzLmdldFBlcnNvbihhX251bSAvIDIpOyB9XG5cdFx0ZWxzZSB7cmV0dXJuIHRoaXMuZ2V0UGVyc29uKChhX251bSAtIDEpIC8gMik7IH1cblx0fVxuXG5cdGluc2VydFJlbGF0aW9uc2hpcHMgPSBmdW5jdGlvbihyZWxhdGlvbnNoaXBzKSB7XG5cdFx0dmFyIHBpZE1hcCA9IG5ldyBNYXAoKTtcblx0XHRmb3IgKGNvbnN0IHBlcnNvbiBvZiB0aGlzLnBlcnNvbk1hcC52YWx1ZXMoKSkge1xuXHRcdFx0cGlkTWFwLnNldChwZXJzb24ucGlkLCBwZXJzb24uYV9udW0pO1xuXHRcdH1cblxuXHRcdGZvciAoY29uc3QgcmVsYXRpb25zaGlwIG9mIHJlbGF0aW9uc2hpcHMpe1xuXHRcdFx0aWYgKCFyZWxhdGlvbnNoaXAuZmFjdHMpIGNvbnRpbnVlO1xuXHRcdFx0aWYgKHJlbGF0aW9uc2hpcC5mYWN0c1swXS50eXBlID09IFwiaHR0cDovL2dlZGNvbXgub3JnL01hcnJpYWdlXCIpIHtcblx0XHRcdFx0bGV0IHBlcnNvbjEgPSB0aGlzLnBlcnNvbk1hcC5nZXQocGlkTWFwLmdldChyZWxhdGlvbnNoaXAucGVyc29uMS5yZXNvdXJjZUlkKSk7XG5cdFx0XHRcdGxldCBwZXJzb24yID0gdGhpcy5wZXJzb25NYXAuZ2V0KHBpZE1hcC5nZXQocmVsYXRpb25zaGlwLnBlcnNvbjIucmVzb3VyY2VJZCkpO1xuXHRcdFx0XHRpZiAocGVyc29uMSAmJiBwZXJzb24yICYmIHJlbGF0aW9uc2hpcC5mYWN0c1swXS5kYXRlKSBwZXJzb24xLmFkZE1hcnJpYWdlRGF0ZShyZWxhdGlvbnNoaXAuZmFjdHNbMF0uZGF0ZS5vcmlnaW5hbCk7XG5cdFx0XHRcdGlmIChwZXJzb24xICYmIHBlcnNvbjIgJiYgcmVsYXRpb25zaGlwLmZhY3RzWzBdLnBsYWNlKSBwZXJzb24xLmFkZE1hcnJpYWdlUGxhY2UocmVsYXRpb25zaGlwLmZhY3RzWzBdLnBsYWNlLm9yaWdpbmFsKTtcblx0XHRcdFx0aWYgKHBlcnNvbjEgJiYgcGVyc29uMiAmJiByZWxhdGlvbnNoaXAuZmFjdHNbMF0uZGF0ZSkgcGVyc29uMi5hZGRNYXJyaWFnZURhdGUocmVsYXRpb25zaGlwLmZhY3RzWzBdLmRhdGUub3JpZ2luYWwpO1xuXHRcdFx0XHRpZiAocGVyc29uMSAmJiBwZXJzb24yICYmIHJlbGF0aW9uc2hpcC5mYWN0c1swXS5wbGFjZSkgcGVyc29uMi5hZGRNYXJyaWFnZVBsYWNlKHJlbGF0aW9uc2hpcC5mYWN0c1swXS5wbGFjZS5vcmlnaW5hbCk7XG5cdFx0XHR9XG5cdFx0fTtcblx0fVxufVxuXG5leHBvcnQgY2xhc3MgUGVyc29uIHtcbiAgICBjb25zdHJ1Y3RvcihkYXRhKSB7XG4gICAgICAgIFxuICAgICAgdGhpcy5uYW1lID0gbmV3IE5hbWUoZGF0YSk7XG5cdCAgICB0aGlzLmdlbmRlciA9IGRhdGEuZGlzcGxheS5nZW5kZXI7XG5cdFx0XHR0aGlzLmxpdmluZyA9IGRhdGEubGl2aW5nO1xuXG5cdFx0XHR0aGlzLmFfbnVtID0gcGFyc2VJbnQoZGF0YS5kaXNwbGF5LmFzY2VuZGFuY3lOdW1iZXIpIHx8IHVuZGVmaW5lZDsgLy91c2VkIGFzIGEgcGlkXG4gICAgICB0aGlzLmdlbmVyYXRpb24gPSAodGhpcy5hX251bSA8PCAwKS50b1N0cmluZygyKS5sZW5ndGg7XG5cdFx0XHR0aGlzLnBpZCA9IGRhdGEuaWQ7IC8vdW51c2VkXG5cblx0XHRcdHRoaXMuYmlydGhEYXRlID0gbmV3IE15RGF0ZShkYXRhLmRpc3BsYXkuYmlydGhEYXRlKTtcblx0XHRcdHRoaXMuZGVhdGhEYXRlID0gbmV3IE15RGF0ZShkYXRhLmRpc3BsYXkuZGVhdGhEYXRlKTtcblxuXHRcdFx0dGhpcy5iaXJ0aFBsYWNlID0gbm9ybWFsaXplUGxhY2UoZGF0YS5kaXNwbGF5LmJpcnRoUGxhY2UpO1xuXHRcdFx0dGhpcy5kZWF0aFBsYWNlID0gbm9ybWFsaXplUGxhY2UoZGF0YS5kaXNwbGF5LmRlYXRoUGxhY2UpO1xuXG5cdFx0XHR2YXIgbGlmZXNwYW5BcnJheSA9IGRhdGEuZGlzcGxheS5saWZlc3Bhbi5zcGxpdCgnLScpO1xuXHRcdFx0dmFyIGxpZmVzcGFuQmlydGggPSBsaWZlc3BhbkFycmF5Lmxlbmd0aCA+IDAgPyBwYXJzZUludChsaWZlc3BhbkFycmF5WzBdKSA6IHVuZGVmaW5lZDtcblx0XHRcdHZhciBsaWZlc3BhbkRlYXRoID0gbGlmZXNwYW5BcnJheS5sZW5ndGggPiAxID8gcGFyc2VJbnQobGlmZXNwYW5BcnJheVsxXSkgOiB1bmRlZmluZWQ7XG5cblx0XHRcdHRoaXMubGlmZXNwYW4gPSB7XG5cdFx0XHRcdFx0c3RyaW5nOiBkYXRhLmRpc3BsYXkubGlmZXNwYW4sXG5cdFx0XHRcdFx0YmlydGg6IGxpZmVzcGFuQmlydGgsXG5cdFx0XHRcdFx0ZGVhdGg6IGxpZmVzcGFuRGVhdGgsXG5cdFx0XHRcdFx0eWVhcnM6IGxpZmVzcGFuQmlydGggJiYgbGlmZXNwYW5EZWF0aCA/IGxpZmVzcGFuRGVhdGggLSBsaWZlc3BhbkJpcnRoIDogdW5kZWZpbmVkLFxuXHRcdFx0XHRcdHRvU3RyaW5nOiBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMuc3RyaW5nOyB9LFxuXHRcdFx0XHRcdGVxdWFsczogZnVuY3Rpb24ob3RoZXIpIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIG90aGVyLmJpcnRoID09IHRoaXMuYmlydGggJiYgb3RoZXIuZGVhdGggPT0gdGhpcy5kZWF0aDtcblx0XHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHR0aGlzLm9jY3VwYXRpb24gPSBnZXRPY2N1cGF0aW9uKGRhdGEpO1xuICAgIH1cblxuXHRhZGRNYXJyaWFnZURhdGUgPSBmdW5jdGlvbihtYXJyaWFnZURhdGUpIHtcblx0XHR0aGlzLm1hcnJpYWdlRGF0ZSA9IG5ldyBNeURhdGUobWFycmlhZ2VEYXRlKTtcblx0fVxuXG5cdGFkZE1hcnJpYWdlUGxhY2UgPSBmdW5jdGlvbihtYXJyaWFnZVBsYWNlKSB7XG5cdFx0dGhpcy5tYXJyaWFnZVBsYWNlID0gbm9ybWFsaXplUGxhY2UobWFycmlhZ2VQbGFjZSk7XG5cdH1cbn1cblxuY2xhc3MgTXlEYXRlIHtcbiAgICBjb25zdHJ1Y3RvcihkYXRlKSB7XG4gICAgICAgIHZhciBkYXksIG1vbnRoLCB5ZWFyO1xuXG4gICAgICAgIGlmIChkYXRlKSB7XG4gICAgICAgICAgICB2YXIgYXJyID0gZGF0ZS5zcGxpdCgnICcpO1xuICAgICAgICAgICAgZm9yICh2YXIgaSBpbiBhcnIpIHtcbiAgICAgICAgICAgICAgICB2YXIgZWxlbSA9IGFycltpXTtcbiAgICAgICAgICAgICAgICB2YXIgbnVtID0gcGFyc2VJbnQoZWxlbSlcbiAgICAgICAgICAgICAgICBpZiAobnVtID4gMCAmJiBudW0gPCAzMilcbiAgICAgICAgICAgICAgICAgICAgZGF5ID0gbnVtLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoaXNOYU4obnVtKSlcbiAgICAgICAgICAgICAgICAgICAgbW9udGggPSBtb250aHNbZWxlbS50b0xvd2VyQ2FzZSgpXTtcbiAgICAgICAgICAgICAgICBlbHNlIGlmIChlbGVtLmxlbmd0aCA9PSA0KVxuICAgICAgICAgICAgICAgICAgICB5ZWFyID0gZWxlbTtcbiAgICAgICAgICAgIH1cblx0ICAgIH1cblxuICAgICAgICB0aGlzLmRheSA9IGRheTtcbiAgICAgICAgdGhpcy5tb250aCA9IG1vbnRoO1xuICAgICAgICB0aGlzLnllYXIgPSB5ZWFyO1xuICAgICAgICB0aGlzLm9yaWdpbmFsID0gZGF0ZTtcbiAgICB9XG59XG5cbnZhciBtb250aHMgPSB7XG5cdCdqYW51YXJ5JzonSmFudWFyeScsXG5cdCdqYW4nOidKYW51YXJ5Jyxcblx0J2ZlYnJ1YXJ5JzonRmVicnVhcnknLFxuXHQnZmViJzonRmVicnVhcnknLFxuXHQnbWFyJzonTWFyY2gnLFxuXHQnbWFyY2gnOidNYXJjaCcsXG5cdCdhcHInOidBcHJpbCcsXG5cdCdhcHJpbCc6J0FwcmlsJyxcblx0J21heSc6J01heScsXG5cdCdqdW4nOidKdW5lJyxcblx0J2p1bmUnOidKdW5lJyxcblx0J2p1bHknOidKdWx5Jyxcblx0J2p1bCc6J0p1bHknLFxuXHQnYXVndXN0JzonQXVndXN0Jyxcblx0J2F1Zyc6J0F1Z3VzdCcsXG5cdCdzZXB0ZW1iZXInOidTZXB0ZW1iZXInLFxuXHQnc2VwdCc6J1NlcHRlbWJlcicsXG5cdCdvY3RvYmVyJzonT2N0b2JlcicsXG5cdCdvY3QnOidPY3RvYmVyJyxcblx0J25vdmVtYmVyJzonTm92ZW1iZXInLFxuXHQnbm92JzonTm92ZW1iZXInLFxuXHQnZGVjZW1iZXInOidEZWNlbWJlcicsXG5cdCdkZWMnOidEZWNlbWJlcidcbn1cblxuY2xhc3MgTmFtZSB7XG4gICAgY29uc3RydWN0b3IocGVyc29uKSB7XG4gICAgICAgIGxldCBnaXZlbjtcbiAgICAgICAgbGV0IHN1cm5hbWU7XG5cbiAgICAgICAgbGV0IG5hbWVzID0gcGVyc29uLm5hbWVzO1xuICAgICAgICBpZiAobmFtZXMpIHtcbiAgICAgICAgICAgIGxldCBwcmVmZXJyZWROYW1lSW5kZXggPSAwXG4gICAgICAgICAgICBsZXQgY291bnRlciA9IDBcbiAgICAgICAgICAgIHdoaWxlIChjb3VudGVyIDwgbmFtZXMubGVuZ3RoICYmICFuYW1lc1tjb3VudGVyXS5wcmVmZXJyZWQpIHtcbiAgICAgICAgICAgICAgICBjb3VudGVyKytcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChuYW1lc1tjb3VudGVyXS5wcmVmZXJyZWQpIHtcbiAgICAgICAgICAgICAgICBwcmVmZXJyZWROYW1lSW5kZXggPSBjb3VudGVyXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQgZm9ybXMgPSBuYW1lc1twcmVmZXJyZWROYW1lSW5kZXhdLm5hbWVGb3Jtc1xuICAgICAgICAgICAgaWYgKGZvcm1zICYmIGZvcm1zWzBdKSB7XG4gICAgICAgICAgICAgICAgbGV0IHBhcnRzID0gZm9ybXNbMF0ucGFydHNcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpIGluIHBhcnRzKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChwYXJ0c1tpXS50eXBlID09PSBcImh0dHA6Ly9nZWRjb214Lm9yZy9HaXZlblwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgbmFtZSA9IHBhcnRzW2ldLnZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobmFtZS50b0xvd2VyQ2FzZSgpICE9PSBcInVua25vd25cIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdpdmVuID0gbmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHBhcnRzW2ldLnR5cGUgPT09IFwiaHR0cDovL2dlZGNvbXgub3JnL1N1cm5hbWVcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG5hbWUgPSBwYXJ0c1tpXS52YWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5hbWUudG9Mb3dlckNhc2UoKSAhPT0gXCJ1bmtub3duXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdXJuYW1lID0gbmFtZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZnVsbCA9IHBlcnNvbi5kaXNwbGF5Lm5hbWU7XG4gICAgICAgIHRoaXMuZ2l2ZW4gPSBnaXZlbjtcbiAgICAgICAgdGhpcy5maXJzdCA9IGdpdmVuID8gZ2l2ZW4uc3BsaXQoJyAnKVswXSA6IHVuZGVmaW5lZDtcbiAgICAgICAgLy90aGlzLm1pZGRsZSA9IGdpdmVuID8gZ2l2ZW4ucmVwbGFjZSh0aGlzLmZpcnN0ICsgXCIgXCIsICcnKSA6IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5sYXN0ID0gc3VybmFtZTtcblx0XHRcdFx0dGhpcy5jb21wcmVzc2VkTmFtZSA9ICh0aGlzLmZpcnN0LnJlcGxhY2UoL1xccy9nLCAnJykgKyB0aGlzLmxhc3QucmVwbGFjZSgvXFxzL2csICcnKSkudG9VcHBlckNhc2UoKTtcblx0XHRcdFx0Ly90aGlzLmNvbXByZXNzZWROYW1lID0gdGhpcy5mdWxsLnJlcGxhY2UoL1tcXHMuLC1dL2csICcnKS50b1VwcGVyQ2FzZSgpO1xuICAgICAgICB0aGlzLmlzRnVsbCA9ICEhdGhpcy5mdWxsICYmICEhZ2l2ZW4gJiYgISFzdXJuYW1lO1xuICAgIH1cbn1cblxudmFyIG5vcm1hbGl6ZVBsYWNlID0gZnVuY3Rpb24ocGxhY2UpIHtcblx0aWYgKHBsYWNlKSB7XG5cdFx0dmFyIGFycmF5ID0gcGxhY2Uuc3BsaXQoLyxcXHMqLyk7XG5cblx0XHR2YXIgY291bnRyeSA9IGdldENvdW50cnkocGxhY2UpO1xuXHRcdGlmIChjb3VudHJ5KVxuXHRcdFx0YXJyYXlbYXJyYXkubGVuZ3RoIC0gMV0gPSBjb3VudHJ5O1xuXG5cdFx0Ly9yZW1vdmUgZHVwbGljYXRlc1xuXHRcdGZvciAodmFyIGkgaW4gYXJyYXkpIHtcblx0XHRcdGZvciAodmFyIGogaW4gYXJyYXkpIHtcblx0XHRcdFx0aWYgKGkgIT0gaiAmJiBhcnJheVtpXSA9PSBhcnJheVtqXSkge1xuXHRcdFx0XHRcdGFycmF5LnNwbGljZShpLCAxKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vcmVtb3ZlIGJsYW5rc1xuXHRcdGZvciAodmFyIGkgaW4gYXJyYXkpIHtcblx0XHRcdGlmIChhcnJheVtpXS5zZWFyY2goL1thLXpBLVpdLykgPCAwKVxuXHRcdFx0XHRhcnJheS5zcGxpY2UoaSwgMSk7XG5cdFx0fVxuXG5cdFx0aWYgKGFycmF5Lmxlbmd0aCA+IDMpIHtcblx0XHRcdGFycmF5LnNwbGljZSgxLCBhcnJheS5sZW5ndGggLSAzKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gYXJyYXkuam9pbignLCAnKTtcblx0fVxufVxuXG5mdW5jdGlvbiBnZXRPY2N1cGF0aW9uKHBlcnNvbikge1xuXHRpZiAoIXBlcnNvbi5mYWN0cyB8fCAhcGVyc29uLmZhY3RzLmxlbmd0aCkgcmV0dXJuIHVuZGVmaW5lZFxuXHRmb3IgKGxldCBmIG9mIHBlcnNvbi5mYWN0cykge1xuXHRcdGlmIChmLnR5cGUgPT0gXCJodHRwOi8vZ2VkY29teC5vcmcvT2NjdXBhdGlvblwiICYmIGYudmFsdWUpIHtcblx0XHRcdGlmIChmLnZhbHVlLmluY2x1ZGVzKFwiTGFib3JlclwiKSB8fCBmLnZhbHVlLmluY2x1ZGVzKFwiUmV0aXJlZFwiKSkgY29udGludWU7XG5cdFx0XHRyZXR1cm4gZi52YWx1ZTtcblx0XHR9XG5cdH1cblx0cmV0dXJuIHVuZGVmaW5lZFxufVxuXG5mdW5jdGlvbiBnZXRDb3VudHJ5KHBsYWNlKSB7XG5cdGlmIChwbGFjZSkge1xuXHRcdHZhciBhcnIgPSBwbGFjZS5zcGxpdCgvLFxccyovKTtcblx0XHR2YXIga2V5ID0gYXJyW2Fyci5sZW5ndGgtMV0udG9Mb3dlckNhc2UoKS5zcGxpdCgnLicpLmpvaW4oJycpO1xuXHRcdHJldHVybiBjb3VudHJ5TWFwW2tleV07XG5cdH1cblx0cmV0dXJuIHVuZGVmaW5lZFxufVxuXG52YXIgY291bnRyeU1hcCA9IHtcblx0J3VzJzonVW5pdGVkIFN0YXRlcycsXG5cdCd1c2EnOidVbml0ZWQgU3RhdGVzJyxcblx0J3VuaXRlZCBzdGF0ZXMnOidVbml0ZWQgU3RhdGVzJyxcblx0J3VuaXRlZCBzdGF0ZXMgb2YgYW1lcmljYSc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnYWxhYmFtYSc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnYWwnOidVbml0ZWQgU3RhdGVzJyxcblx0J2FsYXNrYSc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnYWsnOidVbml0ZWQgU3RhdGVzJyxcblx0J2FyaXpvbmEnOidVbml0ZWQgU3RhdGVzJyxcblx0J2FyJzonVW5pdGVkIFN0YXRlcycsXG5cdCdhcmthbnNhcyc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnYXInOidVbml0ZWQgU3RhdGVzJyxcblx0J2NhbGlmb3JuaWEnOidVbml0ZWQgU3RhdGVzJyxcblx0J2NhJzonVW5pdGVkIFN0YXRlcycsXG5cdCdjYWwnOidVbml0ZWQgU3RhdGVzJyxcblx0J2NvbG9yYWRvJzonVW5pdGVkIFN0YXRlcycsXG5cdCdjbyc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnY29ubmVjdGljdXQnOidVbml0ZWQgU3RhdGVzJyxcblx0J2N0JzonVW5pdGVkIFN0YXRlcycsXG5cdCdjb25uJzonVW5pdGVkIFN0YXRlcycsXG5cdCdkZWxhd2FyZSc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnZGUnOidVbml0ZWQgU3RhdGVzJyxcblx0J2Zsb3JpZGEnOidVbml0ZWQgU3RhdGVzJyxcblx0J2ZsJzonVW5pdGVkIFN0YXRlcycsXG5cdCdnZW9yZ2lhJzonVW5pdGVkIFN0YXRlcycsXG5cdCdnYSc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnaGF3YWlpJzonVW5pdGVkIFN0YXRlcycsXG5cdCdoaSc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnaWRhaG8nOidVbml0ZWQgU3RhdGVzJyxcblx0J2lkJzonVW5pdGVkIFN0YXRlcycsXG5cdCdpbGxpbm9pcyc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnaWwnOidVbml0ZWQgU3RhdGVzJyxcblx0J2luZGlhbmEnOidVbml0ZWQgU3RhdGVzJyxcblx0J2luJzonVW5pdGVkIFN0YXRlcycsXG5cdCdpb3dhJzonVW5pdGVkIFN0YXRlcycsXG5cdCdpYSc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQna2Fuc2FzJzonVW5pdGVkIFN0YXRlcycsXG5cdCdrcyc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQna2VudHVja3knOidVbml0ZWQgU3RhdGVzJyxcblx0J2t5JzonVW5pdGVkIFN0YXRlcycsXG5cdCdsb3Vpc2lhbm5hJzonVW5pdGVkIFN0YXRlcycsXG5cdCdsYSc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnbWFpbic6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnbWUnOidVbml0ZWQgU3RhdGVzJyxcblx0J21hcnlsYW5kJzonVW5pdGVkIFN0YXRlcycsXG5cdCdtZCc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnbWFzc2FjaHVzZXR0cyc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnbWEnOidVbml0ZWQgU3RhdGVzJyxcblx0J21pY2hpZ2FuJzonVW5pdGVkIFN0YXRlcycsXG5cdCdtaSc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnbWlubmVzb3RhJzonVW5pdGVkIFN0YXRlcycsXG5cdCdtbic6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnbWlzc2lzc2lwcGknOidVbml0ZWQgU3RhdGVzJyxcblx0J21zJzonVW5pdGVkIFN0YXRlcycsXG5cdCdtaXNzb3VyaSc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnbW8nOidVbml0ZWQgU3RhdGVzJyxcblx0J21vbnRhbmEnOidVbml0ZWQgU3RhdGVzJyxcblx0J210JzonVW5pdGVkIFN0YXRlcycsXG5cdCduZWJyYXNrYSc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnbmUnOidVbml0ZWQgU3RhdGVzJyxcblx0J25ldmFkYSc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnbnYnOidVbml0ZWQgU3RhdGVzJyxcblx0J25ldyBoYW1wc2hpcmUnOidVbml0ZWQgU3RhdGVzJyxcblx0J25oJzonVW5pdGVkIFN0YXRlcycsXG5cdCduZXcgamVyc2V5JzonVW5pdGVkIFN0YXRlcycsXG5cdCduaic6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnbmV3IG1leGljbyc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnbm0nOidVbml0ZWQgU3RhdGVzJyxcblx0J25ldyB5b3JrJzonVW5pdGVkIFN0YXRlcycsXG5cdCdueSc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnbm9ydGggY2Fyb2xpbmEnOidVbml0ZWQgU3RhdGVzJyxcblx0J25jJzonVW5pdGVkIFN0YXRlcycsXG5cdCdub3J0aCBkYWtvdGEnOidVbml0ZWQgU3RhdGVzJyxcblx0J25kJzonVW5pdGVkIFN0YXRlcycsXG5cdCdvaGlvJzonVW5pdGVkIFN0YXRlcycsXG5cdCdvaCc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnb2tsYWhvbWEnOidVbml0ZWQgU3RhdGVzJyxcblx0J29rJzonVW5pdGVkIFN0YXRlcycsXG5cdCdvcmVnb24nOidVbml0ZWQgU3RhdGVzJyxcblx0J29yJzonVW5pdGVkIFN0YXRlcycsXG5cdCdwZW5uc3lsdmFuaWEnOidVbml0ZWQgU3RhdGVzJyxcblx0J3BhJzonVW5pdGVkIFN0YXRlcycsXG5cdCdwZW5uJzonVW5pdGVkIFN0YXRlcycsXG5cdCdyaG9kZSBpc2xhbmQnOidVbml0ZWQgU3RhdGVzJyxcblx0J3JpJzonVW5pdGVkIFN0YXRlcycsXG5cdCdzb3V0aCBjYXJvbGluYSc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnc2MnOidVbml0ZWQgU3RhdGVzJyxcblx0J3NvdXRoIGRha290YSc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnc2QnOidVbml0ZWQgU3RhdGVzJyxcblx0J3Rlbm5lc3NlZSc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQndG4nOidVbml0ZWQgU3RhdGVzJyxcblx0J3RleGFzJzonVW5pdGVkIFN0YXRlcycsXG5cdCd0eCc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQndXRhaCB0ZXJyaXRvcnknOidVbml0ZWQgU3RhdGVzJyxcblx0J3V0YWgnOidVbml0ZWQgU3RhdGVzJyxcblx0J3V0JzonVW5pdGVkIFN0YXRlcycsXG5cdCd2ZXJtb250JzonVW5pdGVkIFN0YXRlcycsXG5cdCd2dCc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQndmlyZ2luaWEnOidVbml0ZWQgU3RhdGVzJyxcblx0J3ZhJzonVW5pdGVkIFN0YXRlcycsXG5cdCd3YXNoaW5ndG9uJzonVW5pdGVkIFN0YXRlcycsXG5cdCd3YSc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnd2VzdCB2aXJnaW5pYSc6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnd3YnOidVbml0ZWQgU3RhdGVzJyxcblx0J3dpc2NvbnNpbic6J1VuaXRlZCBTdGF0ZXMnLFxuXHQnd2knOidVbml0ZWQgU3RhdGVzJyxcblx0J3d5b21pbmcnOidVbml0ZWQgU3RhdGVzJyxcblx0J3d5JzonVW5pdGVkIFN0YXRlcycsXG5cblx0J2FmZ2hhbmlzdGFuJzogJ0FmZ2hhbmlzdGFuJyxcblxuXHQnYWwnOidBbGJhbmlhJyxcblx0J2FsYic6J0FsYmFuaWEnLFxuXHQnYWxiYW5pYSc6J0FsYmFuaWEnLFxuXG5cdCdhbGdlcmlhJzonQWxnZXJpYScsXG5cblx0J2FkJzonQW5kb3JyYScsXG5cdCdhZGQnOidBbmRvcnJhJyxcblx0J2FuZG9ycmEnOidBbmRvcnJhJyxcblxuXHQnYW5nb2xhJzonQW5nb2xhJyxcblxuXHQnYW5ndWlsbGEnOidBdW5naWxsYScsXG5cblx0J2FudGlndWEgYW5kIGJhcmJ1ZGEnOidBbnRpZ3VhIGFuZCBCYXJidWRhJyxcblx0J2FudGlndWEnOidBbnRpZ3VhIGFuZCBCYXJidWRhJyxcblx0J2JhcmJ1ZGEnOidBbnRpZ3VhIGFuZCBCYXJidWRhJyxcblx0J2FudGlndWEgJiBiYXJidWRhJzonQW50aWd1YSBhbmQgQmFyYnVkYScsXG5cblx0J2FyZ2VudGluYSc6J0FyZ2VudGluYScsXG5cblx0J2FtJzonQXJtZW5pYScsXG5cdCdhcm0nOidBcm1lbmlhJyxcblx0J2FybWVuaWEnOidBcm1lbmlhJyxcblxuXHQnYXJ1YmEnOidBcnViYScsXG5cblx0J2F1c3RyYWxpYSc6J0F1c3RyYWxpYScsXG5cblx0J2F0JzonQXVzdHJpYScsXG5cdCdhdXQnOidBdXN0cmlhJyxcblx0J2F1c3RyaWEnOidBdXN0cmlhJyxcblxuXHQnYXonOidBemVyYmFpamFuJyxcblx0J2F6ZSc6J0F6ZXJiYWlqYW4nLFxuXHQnYXplcmJhaWphbic6J0F6ZXJiYWlqYW4nLFxuXG5cdCdiYWhhbWFzJzonQmFoYW1hcycsXG5cblx0J2JhaHJhaW4nOidCYWhyYWluJyxcblxuXHQnYmFuZ2xhZGVzaCc6J0JhbmdsYWRlc2gnLFxuXG5cdCdiYXJiYWRvcyc6J0JhcmJhZG9zJyxcblxuXHQnYnknOidCZWxhcnVzJyxcblx0J2Jscic6J0JlbGFydXMnLFxuXHQnYmVsYXJ1cyc6J0JlbGFydXMnLFxuXG5cdCdiZSc6J0JlbGdpdW0nLFxuXHQnYmVsJzonQmVsZ2l1bScsXG5cdCdiZWxnaXVtJzonQmVsZ2l1bScsXG5cblx0J2JlbGl6ZSc6J0JlbGl6ZScsXG5cdCdiZWxpY2UnOidCZWxpemUnLFxuXG5cdCdiZW5pbic6J0JlbmluJyxcblxuXHQnYmVtdWRhJzonQmVybXVkYScsXG5cblx0J2JodXRhbic6J0JodXRhbicsXG5cblx0J2JvbGl2aWEnOidCb2xpdmlhJyxcblxuXHQnYmEnOidCb3NuaWEgYW5kIEhlcnplZ292aW5hJyxcblx0J2JpaCc6J0Jvc25pYSBhbmQgSGVyemVnb3ZpbmEnLFxuXHQnYm9zbmlhIGFuZCBoZXJ6ZWdvdmluYSc6J0Jvc25pYSBhbmQgSGVyemVnb3ZpbmEnLFxuXG5cdCdib3Rzd2FuYSc6J0JvdHN3YW5hJyxcblxuXHQnYnJhemlsJzonQnJhemlsJyxcblxuXHQnYnJpdGlzaCB2aXJnaW4gaXNsYW5kcyc6J0JyaXRpc2ggVmlyZ2luIElzbGFuZHMnLFxuXG5cdCdicnVuZWknOidCcnVuZWknLFxuXG5cdCdiZyc6J0J1bGdhcmlhJyxcblx0J2Jncic6J0J1bGdhcmlhJyxcblx0J2J1bGdhcmlhJzonQnVsZ2FyaWEnLFxuXG5cdCdidXJraW5hIGZhc28nOidCdXJraW5hIEZhc28nLFxuXG5cdCdidXJ1bmRpJzonQnVydW5kaScsXG5cblx0J2NhYm8gdmVyZGUnOidDYWJvIFZlcmRlJyxcblx0J2NhcGUgdmVyZGUnOidDYWJvIFZlcmRlJyxcblx0J3ZlcmRlIGNhcGUnOidDYWJvIFZlcmRlJyxcblx0J2NhcGUgZ3JlZW4nOidDYWJvIFZlcmRlJyxcblx0J2dyZWVuIGNhcGUnOidDYWJvIFZlcmRlJyxcblxuXHQnY2FtYm9kaWEnOidDYW1ib2RpYScsXG5cblx0J2NhbWVyb29uJzonQ2FtZXJvb24nLFxuXG5cdCdjYW5hZGEnOidDYW5hZGEnLFxuXG5cdCdjYXltYW4gaXNsYW5kcyc6J0NheW1hbiBJc2xhbmRzJyxcblxuXHQnY2VudHJhbCBhZnJpY2FuIHJlcHVibGljJzonQ2VudHJhbCBBZnJpY2FuIFJlcHVibGljJyxcblxuXHQnY2hhZCc6J0NoYWQnLFxuXG5cdCdjaGlsZSc6J0NoaWxlJyxcblxuXHQnY2hpbmEnOidDaGluYScsXG5cblx0J2NvbG9tYmlhJzonQ29sb21iaWEnLFxuXHQnY29sdW1iaWEnOidDb2xvbWJpYScsXG5cblx0J2NvbW9yb3MnOidDb21vcm9zJyxcblxuXHQnY29vayBpc2xhbmRzJzonQ29vayBJc2xhbmRzJyxcblxuXHQnZGVtb2NyYXRpYyByZXB1YmxpYyBvZiB0aGUgY29uZ28nOidEZW1vY3JhdGljIFJlcHVibGljIG9mIHRoZSBDb25nbycsXG5cblx0J3JlcHVibGljIG9mIHRoZSBjb25nbyc6J1JlcHVibGljIG9mIHRoZSBDb25nbycsXG5cdCdjb25nbyc6J1JlcHVibGljIG9mIHRoZSBDb25nbycsXG5cblx0J2Nvc3RhIHJpY2EnOidDb3N0YSBSaWNhJyxcblxuXHQnY290ZSBkXFwnaXZvaXJlJzonQ290ZSBEXFwnSXZvaXJlJyxcblx0J2l2b3J5IGNvYXN0JzonQ290ZSBEXFwnSXZvaXJlJyxcblxuXG5cdCdocic6J0Nyb2F0aWEnLFxuXHQnaHJ2JzonQ3JvYXRpYScsXG5cdCdjcm9hdGlhJzonQ3JvYXRpYScsXG5cblx0J2N1YmEnOidDdWJhJyxcblxuXHQnY3knOidDeXBydXMnLFxuXHQnY3lwJzonQ3lwcnVzJyxcblx0J2N5cHJ1cyc6J0N5cHJ1cycsXG5cblx0J2N6JzonQ3plY2ggUmVwdWJsaWMnLFxuXHQnY3plJzonQ3plY2ggUmVwdWJsaWMnLFxuXHQnY3plY2ggcmVwdWJsaWMnOidDemVjaCBSZXB1YmxpYycsXG5cblx0J2RrJzonRGVubWFyaycsXG5cdCdkbmsnOidEZW5tYXJrJyxcblx0J2Rhbm1hcmsnOidEZW5tYXJrJyxcblx0J2RubWsnOidEZW5tYXJrJyxcblx0J2Rlbm1hcmsnOidEZW5tYXJrJyxcblxuXHQnZGppYm91dGknOidEamlib3V0aScsXG5cblx0J2RvbWluaWNhJzonRG9taW5pY2EnLFxuXG5cdCdEb21pbmljYW4gUmVwdWJsaWMnOidEb21pbmljYW4gUmVwdWJsaWMnLFxuXHQnZHInOidEb21pbmljYW4gUmVwdWJsaWMnLFxuXG5cdCdlY3VhZG9yJzonRWN1YWRvcicsXG5cblx0J2VneXB0JzonRWd5cHQnLFxuXG5cdCdlbCBzYWx2YWRvcic6J0VsIFNhbHZhZG9yJyxcblx0J3NhbHZhZG9yJzonRWwgU2FsdmFkb3InLFxuXG5cdCdlcXVhdG9yaWFsIGd1aW5lYSc6J0VxdWF0b3JpYWwgR3VpbmVhJyxcblxuXHQnZXJpdHJlYSc6J0VyaXRyZWEnLFxuXG5cdCdlZSc6J0VzdG9uaWEnLFxuXHQnZXN0JzonRXN0b25pYScsXG5cdCdlc3RvbmlhJzonRXN0b25pYScsXG5cblx0J2V0aG9waWEnOidFdGhpb3BpYScsXG5cblx0J2ZhbGtsYW5kIGlzbGFuZHMnOidGYWxrbGFuZCBJc2xhbmRzJyxcblxuXHQnZmFyb2UgaXNsYW5kcyc6J0Zhcm9lIElzbGFuZHMnLFxuXG5cdCdmaWppJzonRmlqaScsXG5cblx0J2ZpJzonRmlubGFuZCcsXG5cdCdmaW4nOidGaW5sYW5kJyxcblx0J2ZpbmxhbmQnOidGaW5sYW5kJyxcblxuXHQnZnInOidGcmFuY2UnLFxuXHQnZnJhJzonRnJhbmNlJyxcblx0J2ZyYW5jZSc6J0ZyYW5jZScsXG5cblx0J2ZyZW5jaCBwb2x5bmVzaWEnOidGcmVuY2ggUG9seW5lc2lhJyxcblxuXHQnZnJlbmNoIHdlc3QgaW5kaWVzJzonRnJlbmNoIFdlc3QgSW5kaWVzJyxcblxuXHQnZ2Fib24nOidHYWJvbicsXG5cblx0J2dhbWJpYSc6J0dhbWJpYScsXG5cblx0J2dlJzonR2VvcmdpYScsXG5cdCdnZW8nOidHZW9yZ2lhJyxcblx0J2dlb3JnaWEnOidHZW9yZ2lhJyxcblxuXHQnZGUnOidHZXJtYW55Jyxcblx0J2RldSc6J0dlcm1hbnknLFxuXHQnZ2VybWFueSc6J0dlcm1hbnknLFxuXG5cdCdnaGFuYSc6J0doYW5hJyxcblxuXHQnZ2licmFsdGFyJzonR2licmFsdGFyJyxcblxuXHQnZ3InOidHcmVlY2UnLFxuXHQnZ3JjJzonR3JlZWNlJyxcblx0J2dyZWVjZSc6J0dyZWVjZScsXG5cblx0J2dyZWVubGFuZCc6J0dyZWVubGFuZCcsXG5cblx0J2dyZW5hZGEnOidHcmVuYWRhJyxcblxuXHQnZ3VhbSc6J0d1YW0nLFxuXG5cdCdndWF0ZW1hbGEnOidHdWF0ZW1hbGEnLFxuXG5cdCdnZXVybnNleSc6J0dldXJuc2V5JyxcblxuXHQnZ3VpbmVhJzonR3VpbmVhJyxcblxuXHQnZ3VpbmVhLWJpc3NhdSc6J0d1aW5lYS1CaXNzYXUnLFxuXHQnZ3VpbmVhIGJpc3NhdSc6J0d1aW5lYS1CaXNzYXUnLFxuXHQnZ3VpbmVhYmlzc2F1JzonR3VpbmVhLUJpc3NhdScsXG5cblx0J2d1eWFuYSc6J0d1eWFuYScsXG5cblx0J2hhaXRpJzonSGFpdGknLFxuXG5cdCdob25kdXJhcyc6J0hvbmR1cmFzJyxcblxuXHQnaG9uZyBrb25nJzonSG9uZyBLb25nJyxcblxuXHQnaHUnOidIdW5nYXJ5Jyxcblx0J2h1bic6J0h1bmdhcnknLFxuXHQnaHVuZ2FyeSc6J0h1bmdhcnknLFxuXG5cdCdpcyc6J0ljZWxhbmQnLFxuXHQnaXNsJzonSWNlbGFuZCcsXG5cdCdpY2VsYW5kJzonSWNlbGFuZCcsXG5cblx0J2luZGlhJzonSW5kaWEnLFxuXG5cdCdpbmRvbmVzaWEnOidJbmRvbmVzaWEnLFxuXG5cdCdpcmFuJzonSXJhbicsXG5cblx0J2lyYXEnOidJcmFxJyxcblxuXHQnaWUnOidJcmVsYW5kJyxcblx0J2lybCc6J0lyZWxhbmQnLFxuXHQnaXJlbGFuZCc6J0lyZWxhbmQnLFxuXG5cdCdpc2xlIG9mIG1hbic6J0lzbGUgb2YgTWFuJyxcblxuXHQnaXNyYWVsJzonSXNyYWVsJyxcblxuXHQnaXQnOidJdGFseScsXG5cdCdpdGEnOidJdGFseScsXG5cdCdpdGFseSc6J0l0YWx5JyxcblxuXHQnamFtYWljYSc6J0phbWFpY2EnLFxuXG5cdCdqYXBhbic6J0phcGFuJyxcblxuXHQnamVyc2V5JzonSmVyc2V5JyxcblxuXHQnam9yZGFuJzonSm9yZGFuJyxcblxuXHQna2F6YWtoc3Rhbic6J0themFraHN0YW4nLFxuXHQna2F6YWtzdGFuJzonS2F6YWtoc3RhbicsXG5cblx0J2tlbnlhJzonS2VueWEnLFxuXG5cdCdraXJpYmF0aSc6J0tpcmliYXRpJyxcblxuXHQna29zb3ZvJzonS29zb3ZvJyxcblxuXHQna3V3YWl0JzonS3V3YWl0JyxcblxuXHQna3lyZ3l6c3Rhbic6J0t5cmd5c3RhbicsXG5cblx0J2t5cmd5eiByZXB1YmxpYyc6J0t5cmd5eiBSZXB1YmxpYycsXG5cdCdreXJneXonOidLeXJneXogUmVwdWJsaWMnLFxuXG5cdCdsYW9zJzonTGFvcycsXG5cblx0J2xhdHZpYSc6J0xhdHZpYScsXG5cblx0J2xlYmFub24nOidMZWJhbm9uJyxcblxuXHQnbGVzb3Robyc6J0xlc290aG8nLFxuXG5cdCdsaWJlcmlhJzonTGliZXJpYScsXG5cblx0J2xpYnlhJzonTGlieWEnLFxuXHQnbGliaWEnOidMaWJ5YScsXG5cblx0J2xpJzonTGllY2h0ZW5zdGVpbicsXG5cdCdsaWUnOidMaWVjaHRlbnN0ZWluJyxcblx0J2xpZWNodGVuc3RlaW4nOidMaWVjaHRlbnN0ZWluJyxcblxuXHQnbHQnOidMaXRodWFuaWEnLFxuXHQnbHR1JzonTGl0aHVhbmlhJyxcblx0J2xpdGh1YW5pYSc6J0xpdGh1YW5pYScsXG5cblx0J2x1JzonTHV4ZW1ib3VyZycsXG5cdCdsdXgnOidMdXhlbWJvdXJnJyxcblx0J2x1eGVtYm91cmcnOidMdXhlbWJvdXJnJyxcblxuXHQnbWFjYXUnOidNYWNhdScsXG5cblx0J21hY2Vkb25pYSc6J01hY2Vkb25pYScsXG5cblx0J21hZGFnYXNjYXInOidNYWRhZ2FzY2FyJyxcblxuXHQnbWFsYXdpJzonTWFsYXdpJyxcblxuXHQnbWFsYXlzaWEnOidNYWxheXNpYScsXG5cblx0J21hbGRpdmVzJzonTWFsZGl2ZXMnLFxuXG5cdCdtYWxpJzonTWFsaScsXG5cblx0J21hbHRhJzonTWFsdGEnLFxuXG5cdCdtYXJzaGFsbCBpc2xhbmRzJzonTWFyc2hhbGwgSXNsYW5kcycsXG5cblx0J21hdXJpdGFuaWEnOidNYXVyaXRhbmlhJyxcblxuXHQnbWF1cml0aXVzJzonTWF1cml0aXVzJyxcblxuXHQnbWV4aWNvJzonTWV4aWNvJyxcblx0J21lamljbyc6J01leGljbycsXG5cblx0J21pY3JvbmVzaWEnOidNaWNyb25lc2lhJyxcblxuXHQnbW9sZG92YSc6J01vbGRvdmEnLFxuXG5cdCdtb25hY28nOidNb25hY28nLFxuXG5cdCdtb25nb2xpYSc6J01vbmdvbGlhJyxcblxuXHQnbW9udGVuZWdybyc6J01vbnRlbmVncm8nLFxuXG5cdCdtb250c2VycmF0JzonTW9udHNlcnJhdCcsXG5cdCdtb250c2VyYXQnOidNb250c2VycmF0JyxcblxuXHQnbW9yb2Njbyc6J01vcm9jY28nLFxuXHQnbW9yb2NvJzonTW9yb2NjbycsXG5cblx0J21vemFtYmlxdWUnOidNb3phbWJpcXVlJyxcblxuXHQnbXlhbm1hcic6J015YW5tYXInLFxuXG5cdCdidXJtYSc6J015YW5tYXInLFxuXG5cdCduYW1pYmlhJzonTmFtaWJpYScsXG5cblx0J25hdXJ1JzonTmF1cnUnLFxuXG5cdCduZXBhbCc6J05lcGFsJyxcblxuXHQnbmwnOidOZXRoZXJsYW5kcycsXG5cdCdubGQnOidOZXRoZXJsYW5kcycsXG5cdCduZXRoZXJsYW5kcyc6J05ldGhlcmxhbmRzJyxcblxuXHQnbmV0aGVybGFuZHMgYW50aWxsZXMnOidOZXRoZXJsYW5kcyBBbnRpbGxlcycsXG5cdCdhbnRpbGxlcyc6J05ldGhlcmxhbmRzIEFudGlsbGVzJyxcblxuXHQnbmV3IGNhbGVkb25pYSc6J05ldyBDYWxlZG9uaWEnLFxuXG5cdCduZXcgemVhbGFuZCc6J05ldyBaZWFsYW5kJyxcblxuXHQnbmljYXJhZ3VhJzonTmljYXJhZ3VhJyxcblxuXHQnbmlnZXInOidOaWdlcicsXG5cblx0J25pZ2VyaWEnOidOaWdlcmlhJyxcblxuXHQnbm9ydGgga29yZWEnOidOb3J0aCBLb3JlYScsXG5cblx0J25vJzonTm9yd2F5Jyxcblx0J25vcic6J05vcndheScsXG5cdCdub3J3YXknOidOb3J3YXknLFxuXG5cdCdvbWFuJzonT21hbicsXG5cblx0J290dG9tYW4gZW1waXJlJzonT3R0b21hbiBFbXBpcmUnLFxuXG5cdCdwYWtpc3Rhbic6J1Bha2lzdGFuJyxcblxuXHQncGFsYXUnOidQYWxhdScsXG5cblx0J3BhbGVzdGluZSc6J1BhbGVzdGluZScsXG5cblx0J3BhbmFtYSc6J1BhbmFtYScsXG5cblx0J3BhcHVhIG5ldyBndWluZWEnOidQYXB1YSBOZXcgR3VpbmVhJyxcblx0J3BhcGEgbmV3IGd1aW5lYSc6J1BhcHVhIE5ldyBHdWluZWEnLFxuXG5cdCdwYXJhZ3VheSc6J1BhcmFndWF5JyxcblxuXHQncGVydSc6J1BlcnUnLFxuXG5cdCdwaGlsaXBwaW5lcyc6J1BoaWxpcHBpbmVzJyxcblxuXHQncGwnOidQb2xhbmQnLFxuXHQncG9sJzonUG9sYW5kJyxcblx0J3BvbGFuZCc6J1BvbGFuZCcsXG5cblx0J3B0JzonUG9ydHVnYWwnLFxuXHQncHJ0JzonUG9ydHVnYWwnLFxuXHQncG9ydHVnYWwnOidQb3J0dWdhbCcsXG5cblx0J3BydXNzaWEnOidQcnVzc2lhJyxcblxuXHQncHVlcnRvIHJpY28nOidQdWVydG8gUmljbycsXG5cdCdwb3J0YSByaWNvJzonUHVlcnRvIFJpY28nLFxuXHQncG9ydG8gcmljbyc6J1B1ZXJ0byBSaWNvJyxcblxuXHQncWF0YXInOidRYXRhcicsXG5cblx0J3JldW5pb24nOidSZXVuaW9uJyxcblxuXHQncm8nOidSb21hbmlhJyxcblx0J3JvdSc6J1JvbWFuaWEnLFxuXHQncm9tYW5pYSc6J1JvbWFuaWEnLFxuXG5cdCdydSc6J1J1c3NpYScsXG5cdCdydXMnOidSdXNzaWEnLFxuXHQncnVzc2lhJzonUnVzc2lhJyxcblxuXHQncndhbmRhJzonUndhbmRhJyxcblxuXHQnc2FpbnQga2l0dHMgYW5kIG5ldmlzJzonU2FpbnQgS2l0dHMgYW5kIE5ldmlzJyxcblx0J3N0IGtpdHRzIGFuZCBuZXZpcyc6J1NhaW50IEtpdHRzIGFuZCBOZXZpcycsXG5cdCdzdC4ga2l0dHMgYW5kIG5ldmlzJzonU2FpbnQgS2l0dHMgYW5kIE5ldmlzJyxcblx0J3NhaW50IGtpdHRzICYgbmV2aXMnOidTYWludCBLaXR0cyBhbmQgTmV2aXMnLFxuXHQnc3Qga2l0dHMgJiBuZXZpcyc6J1NhaW50IEtpdHRzIGFuZCBOZXZpcycsXG5cdCdzdC4ga2l0dHMgJiBuZXZpeCc6J1NhaW50IEtpdHRzIGFuZCBOZXZpcycsXG5cblx0J3NhaW50IGx1Y2lhJzonU2FpbnQgTHVjaWEnLFxuXHQnc3QgbHVjaWEnOidTYWludCBMdWNpYScsXG5cdCdzdC4gbHVjaWEnOidTYWludCBMdWljYScsXG5cblx0J3NhaW50IHBpZXJyZSBhbmQgbWlxdWVsb24nOidTYWludCBQaWVycmUgYW5kIE1pcXVlbG9uJyxcblx0J3N0IHBpZXJyZSBhbmQgbWlxdWVsb24nOidTYWludCBQaWVycmUgYW5kIE1pcXVlbG9uJyxcblx0J3N0LiBwaWVycmUgYW5kIG1pcXVlbG9uJzonU2FpbnQgUGllcnJlIGFuZCBNaXF1ZWxvbicsXG5cdCdzYWludCBwaWVycmUgJiBtaXF1ZWxvbic6J1NhaW50IFBpZXJyZSBhbmQgTWlxdWVsb24nLFxuXHQnc3QgcGllcnJlICYgbWlxdWVsb24nOidTYWludCBQaWVycmUgYW5kIE1pcXVlbG9uJyxcblx0J3N0LiBwaWVycmUgJiBtaXF1ZWxvbic6J1NhaW50IFBpZXJyZSBhbmQgTWlxdWVsb24nLFxuXG5cdCdzYWludCB2aW5jZW50IGFuZCB0aGUgZ3JlbmFkaW5lcyc6J1NhaW50IFZpbmNlbnQgYW5kIHRoZSBHcmVuYWRpbmVzJyxcblx0J3N0IHZpbmNlbnQgYW5kIHRoZSBncmVuYWRpbmVzJzonU2FpbnQgVmluY2VudCBhbmQgdGhlIEdyZW5hZGluZXMnLFxuXHQnc3QuIHZpbmNlbnQgYW5kIHRoZSBncmVuYWRpbmVzJzonU2FpbnQgVmluY2VudCBhbmQgdGhlIEdyZW5hZGluZXMnLFxuXHQnc2FpbnQgdmluY2VudCAmIHRoZSBncmVuYWRpbmVzJzonU2FpbnQgVmluY2VudCBhbmQgdGhlIEdyZW5hZGluZXMnLFxuXHQnc3QgdmluY2VudCAmIHRoZSBncmVuYWRpbmVzJzonU2FpbnQgVmluY2VudCBhbmQgdGhlIEdyZW5hZGluZXMnLFxuXHQnc3QuIHZpbmNlbnQgJiB0aGUgZ3JlbmFkaW5lcyc6J1NhaW50IFZpbmNlbnQgYW5kIHRoZSBHcmVuYWRpbmVzJyxcblx0J3NhaW50IHZpbmNlbnQgYW5kIGdyZW5hZGluZXMnOidTYWludCBWaW5jZW50IGFuZCB0aGUgR3JlbmFkaW5lcycsXG5cdCdzdCB2aW5jZW50IGFuZCBncmVuYWRpbmVzJzonU2FpbnQgVmluY2VudCBhbmQgdGhlIEdyZW5hZGluZXMnLFxuXHQnc3QuIHZpbmNlbnQgYW5kIGdyZW5hZGluZXMnOidTYWludCBWaW5jZW50IGFuZCB0aGUgR3JlbmFkaW5lcycsXG5cdCdzYWludCB2aW5jZW50ICYgZ3JlbmFkaW5lcyc6J1NhaW50IFZpbmNlbnQgYW5kIHRoZSBHcmVuYWRpbmVzJyxcblx0J3N0IHZpbmNlbnQgJiBncmVuYWRpbmVzJzonU2FpbnQgVmluY2VudCBhbmQgdGhlIEdyZW5hZGluZXMnLFxuXHQnc3QuIHZpbmNlbnQgJiBncmVuYWRpbmVzJzonU2FpbnQgVmluY2VudCBhbmQgdGhlIEdyZW5hZGluZXMnLFxuXG5cdCdzYW1vYSc6J1NhbW9hJyxcblxuXHQnc2FuIG1hcmlubyc6J1NhbiBNYXJpbm8nLFxuXG5cdCdzYW8gdG9tZSBhbmQgcHJpbmNpcGUnOidTYW8gVG9tZSBhbmQgUHJpbmNpcGUnLFxuXHQnc2FpbnQgdGhvbWFzIGFuZCBwcmluY2UnOidTYW8gVG9tZSBhbmQgUHJpbmNpcGUnLFxuXHQnc2FvIHRvbWUgJiBwcmluY2lwZSc6J1NhbyBUb21lIGFuZCBQcmluY2lwZScsXG5cdCdzYWludCB0aG9tYXMgYW5kIHByaW5jaXBlJzonU2FvIFRvbWUgYW5kIFByaW5jaXBlJyxcblx0J3NhaW50IHRob21hcyAmIHByaW5jZSc6J1NhbyBUb21lIGFuZCBQcmluY2lwZScsXG5cblx0J3NhdWRpIGFyYWJpYSc6J1NhdWRpIEFyYWJpYScsXG5cblx0J3NlbmVnYWwnOidTZW5lZ2FsJyxcblxuXHQncnMnOidTZXJiaWEnLFxuXHQnc3JiJzonU2VyYmlhJyxcblx0J3NlcmJpYSc6J1NlcmJpYScsXG5cblx0J3NleWNoZWxsZXMnOidTZXljaGVsbGVzJyxcblxuXHQnc2llcnJhIGxlb25lJzonU2llcnJlIExlb25lJyxcblxuXHQnc2luZ2Fwb3JlJzonU2luZ2Fwb3JlJyxcblxuXHQnc2snOidTbG92YWtpYScsXG5cdCdzdmsnOidTbG92YWtpYScsXG5cdCdzbG92YWtpYSc6J1Nsb3Zha2lhJyxcblxuXHQnc2knOidTbG92ZW5pYScsXG5cdCdzdm4nOidTbG92ZW5pYScsXG5cdCdzbG92ZW5pYSc6J1Nsb3ZlbmlhJyxcblxuXHQnc29sb21vbiBpc2xhbmRzJzonU29sb21vbiBJc2xhbmRzJyxcblxuXHQnc29tYWxpYSc6J1NvbWFsaWEnLFxuXG5cdCdzb3V0aCBhZnJpY2EnOidTb3V0aCBBZnJpY2EnLFxuXG5cdCdzb3V0aCBrb3JlYSc6J1NvdXRoIEtvcmVhJyxcblxuXHQnc291dGggc3VkYW4nOidTb3V0aCBTdWRhbicsXG5cblx0J2VzJzonU3BhaW4nLFxuXHQnZXNwJzonU3BhaW4nLFxuXHQnc3BhaW4nOidTcGFpbicsXG5cblx0J3NyaSBsYW5rYSc6J1NyaSBMYW5rYScsXG5cblx0J3N1ZGFuJzonU3VkYW4nLFxuXG5cdCdzdXJpbmFtZSc6J1N1cmluYW1lJyxcblxuXHQnc3dhemlsYW5kJzonU3dhemlsYW5kJyxcblxuXHQnc2UnOidTd2VkZW4nLFxuXHQnc2VlJzonU3dlZGVuJyxcblx0J3N3ZWQnOidTd2VkZW4nLFxuXHQnc3dlZGVuJzonU3dlZGVuJyxcblx0J3N2ZXJpZ2UnOidTd2VkZW4nLFxuXG5cdCdjaCc6J1N3aXR6ZXJsYW5kJyxcblx0J2NoZSc6J1N3aXR6ZXJsYW5kJyxcblx0J3N3aXR6ZXJsYW5kJzonU3dpdHplcmxhbmQnLFxuXG5cdCdzeXJpYSc6J1N5cmlhJyxcblxuXHQndGFpd2FuJzonVGFpd2FuJyxcblxuXHQndGFqaWtpc3Rhbic6J1RhamlraXN0YW4nLFxuXHQndGFqaWtzdGFuJzonVGFqaWtpc3RhbicsXG5cblx0J3RhbnphbmlhJzonVGFuemFuaWEnLFxuXG5cdCd0aGFpbGFuZCc6J1RoYWlsYW5kJyxcblxuXHQndGltb3ItbGVzdGUnOidUaW1vci1MZXN0ZScsXG5cdCd0aW1vciBsZXN0ZSc6J1RpbW9yLUxlc3RlJyxcblx0J3RpbW9ybGVzdGUnOidUaW1vci1MZXN0ZScsXG5cblx0J3RvZ28nOidUb2dvJyxcblxuXHQndG9uZ2EnOidUb25nYScsXG5cblx0J3RyaW5pZGFkIGFuZCB0b2JhZ28nOidUcmluaWRhZCBhbmQgVG9iYWdvJyxcblx0J3RyaW5pZGFkICYgdG9iYWdvJzonVHJpbmlkYWQgYW5kIFRvYmFnbycsXG5cblx0J3R1bmlzaWEnOidUdW5pc2lhJyxcblxuXHQndHInOidUdXJrZXknLFxuXHQndHVyJzonVHVya2V5Jyxcblx0J3R1cmtleSc6J1R1cmtleScsXG5cblx0J3R1cmttZW5pc3Rhbic6J1R1cmttZW5pc3RhbicsXG5cdCd0dXJrZXN0YW4nOidUdXJrbWVuaXN0YW4nLFxuXG5cdCd0dXJrcyBhbmQgY2FpY29zJzonVHVya3MgYW5kIENhaWNvcycsXG5cdCd0dXJrcyAmIGNhaWNvcyc6J1R1cmtzIGFuZCBDYWljb3MnLFxuXG5cdCd0dXZhbHUnOidUdXZhbHUnLFxuXG5cdCd1Z2FuZGEnOidVZ2FuZGEnLFxuXG5cdCd1YSc6J1VrcmFpbmUnLFxuXHQndWtyJzonVWtyYWluZScsXG5cdCd1a3JhaW5lJzonVWtyYWluZScsXG5cblx0J3VuaXRlZCBhcmFiIGVtaXJhdGVzJzonVW5pdGVkIEFyYWIgRW1pcmF0ZXMnLFxuXG5cdCdzY290bGFuZCc6J1VuaXRlZCBLaW5nZG9tJyxcblx0J3Njb3QnOidVbml0ZWQgS2luZ2RvbScsXG5cdCdnYic6J1VuaXRlZCBLaW5nZG9tJyxcblx0J2dicic6J1VuaXRlZCBLaW5nZG9tJyxcblx0J3VrJzonVW5pdGVkIEtpbmdkb20nLFxuXHQnZW4nOidVbml0ZWQgS2luZ2RvbScsXG5cdCdlbmcnOidVbml0ZWQgS2luZ2RvbScsXG5cdCdlbmdsYW5kJzonVW5pdGVkIEtpbmdkb20nLFxuXHQnZ3JlYXQgYnJpdGFpbic6J1VuaXRlZCBLaW5nZG9tJyxcblx0J3VuaXRlZCBraW5nZG9tJzonVW5pdGVkIEtpbmdkb20nLFxuXG5cdCd1cnVndWF5JzonVXJ1Z3VheScsXG5cblx0J3V6YmVraXN0YW4nOidVemJla2lzdGFuJyxcblxuXHQndmFudWF0dSc6J1ZhbnVhdHUnLFxuXHQndmFuYXV0dSc6J1ZhbnVhdHUnLFxuXG5cdCd2YXRpY2FuIGNpdHknOidWYXRpY2FuIENpdHknLFxuXHQnaG9seSBzZWUnOidWYXRpY2FuIENpdHknLFxuXHQndmF0aWNhbic6J1ZhdGljYW4gQ2l0eScsXG5cdCd0aGUgdmF0aWNhbic6J1ZhdGljYW4gQ2l0eScsXG5cdCd0aGUgdmF0aWNhbiBjaXR5JzonVmF0aWNhbiBDaXR5Jyxcblx0J3RoZSBob2x5IHNlZSc6J1ZhdGljYW4gQ2l0eScsXG5cblx0J3ZlbmV6dWVsYSc6J1ZlbmV6dWVsYScsXG5cblx0J3ZpZXRuYW0nOidWaWV0bmFtJyxcblxuXHQndmlyZ2luIGlzbGFuZHMnOidWaXJnaW4gSXNsYW5kcycsXG5cblx0J3llbWVuJzonWWVtZW4nLFxuXG5cdCd6YW1iaWEnOidaYW1iaWEnLFxuXG5cdCd6aW1iYWJ3ZSc6J1ppbWJhYndlJyxcblx0J3Job2Rlc2lhJzonWmltYmFid2UnLFxuXHQncm9kZXNpYSc6J1ppbWJhYndlJyxcblxuXHQnZW5nbGFuZCc6J0VuZ2xhbmQnLFxuXG5cdCdzY290bGFuZCc6J1Njb3RsYW5kJyxcblxuXHQnd2FsZXMnOidXYWxlcycsXG5cblx0J25vcnRoZXJuIGlyZWxhbmQnOidOb3J0aGVybiBJcmVsYW5kJyxcblx0J24gaXJlbGFuZCc6J05vcnRoZXJuIElyZWxhbmQnLFxuXHQnbi4gaXJlbGFuZCc6J05vcnRoZXJuIElyZWxhbmQnXG59Il0sIm5hbWVzIjpbIlRyZWUiLCJjb25zdHJ1Y3RvciIsInBlcnNvbk1hcCIsIk1hcCIsInNldFBlcnNvbnMiLCJhZGRQZXJzb24iLCJwZXJzb24iLCJzZXQiLCJhX251bSIsImdldFBlcnNvbiIsImdldCIsInRvU3RyaW5nIiwiZ2V0U3BvdXNlIiwiZ2VuZGVyIiwic3BvdXNlIiwiZ2V0RmF0aGVyIiwiY2hpbGQiLCJmYV9udW0iLCJnZXRNb3RoZXIiLCJtYV9udW0iLCJnZXRDaGlsZCIsInBhcmVudCIsImluc2VydFJlbGF0aW9uc2hpcHMiLCJyZWxhdGlvbnNoaXBzIiwicGlkTWFwIiwidmFsdWVzIiwicGlkIiwicmVsYXRpb25zaGlwIiwiZmFjdHMiLCJ0eXBlIiwicGVyc29uMSIsInJlc291cmNlSWQiLCJwZXJzb24yIiwiZGF0ZSIsImFkZE1hcnJpYWdlRGF0ZSIsIm9yaWdpbmFsIiwicGxhY2UiLCJhZGRNYXJyaWFnZVBsYWNlIiwiUGVyc29uIiwiZGF0YSIsIm5hbWUiLCJOYW1lIiwiZGlzcGxheSIsImxpdmluZyIsInBhcnNlSW50IiwiYXNjZW5kYW5jeU51bWJlciIsInVuZGVmaW5lZCIsImdlbmVyYXRpb24iLCJsZW5ndGgiLCJpZCIsImJpcnRoRGF0ZSIsIk15RGF0ZSIsImRlYXRoRGF0ZSIsImJpcnRoUGxhY2UiLCJub3JtYWxpemVQbGFjZSIsImRlYXRoUGxhY2UiLCJsaWZlc3BhbkFycmF5IiwibGlmZXNwYW4iLCJzcGxpdCIsImxpZmVzcGFuQmlydGgiLCJsaWZlc3BhbkRlYXRoIiwic3RyaW5nIiwiYmlydGgiLCJkZWF0aCIsInllYXJzIiwiZXF1YWxzIiwib3RoZXIiLCJvY2N1cGF0aW9uIiwiZ2V0T2NjdXBhdGlvbiIsIm1hcnJpYWdlRGF0ZSIsIm1hcnJpYWdlUGxhY2UiLCJkYXkiLCJtb250aCIsInllYXIiLCJhcnIiLCJpIiwiZWxlbSIsIm51bSIsImlzTmFOIiwibW9udGhzIiwidG9Mb3dlckNhc2UiLCJnaXZlbiIsInN1cm5hbWUiLCJuYW1lcyIsInByZWZlcnJlZE5hbWVJbmRleCIsImNvdW50ZXIiLCJwcmVmZXJyZWQiLCJmb3JtcyIsIm5hbWVGb3JtcyIsInBhcnRzIiwidmFsdWUiLCJmdWxsIiwiZmlyc3QiLCJsYXN0IiwiY29tcHJlc3NlZE5hbWUiLCJyZXBsYWNlIiwidG9VcHBlckNhc2UiLCJpc0Z1bGwiLCJhcnJheSIsImNvdW50cnkiLCJnZXRDb3VudHJ5IiwiaiIsInNwbGljZSIsInNlYXJjaCIsImpvaW4iLCJmIiwiaW5jbHVkZXMiLCJrZXkiLCJjb3VudHJ5TWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./data/fsdatastructures.js\n");

/***/ }),

/***/ "(api)/./pages/api/questiongenerator.js":
/*!****************************************!*\
  !*** ./pages/api/questiongenerator.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _data_fsdatastructures__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../data/fsdatastructures */ \"(api)/./data/fsdatastructures.js\");\n\nvar fsData = null;\nlet rare = true;\nvar limit;\nfunction handler(req, res) {\n    if (req.method === \"POST\") {\n        fsData = new _data_fsdatastructures__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n        const map = new Map(Object.entries(req.body.userFSData));\n        fsData.setPersons(map);\n        var ascendancyNums = req.body.ascendancyNums;\n        var promptArray = new Array;\n        //console.log('req: ', req.body)\n        //console.log(\"size before becoming a map \" + Object.entries(req.body.userFSData).length);\n        //console.log(\"map length \" + map.size)\n        //console.log(ascendancyNums);\n        //console.log(\"tree \" + Array.from(fsData.personMap.values()));\n        //console.log(fsData.personMap);\n        console.log(\"ascendency nums\", ascendancyNums);\n        ascendancyNums.forEach((num)=>{\n            let person = fsData.personMap.get(num.toString());\n            let result = generatePrompt(person);\n            promptArray.push(result);\n        });\n        //console.log(promptArray.length)\n        console.log(promptArray);\n        res.status(201).json(promptArray);\n    } else {\n        res.status(405).json(\"request method must be POST\");\n    }\n};\n/*\nPotential question categories:\n\nrelationships (sibling count) (paternal vs maternal family) (birth order)\noccupations\nplaces or times of events (hometown) (marriage place) (age at death)\n(maybe) life events during famous time periods\n*/ function generatePrompt(person) {\n    return questions[Math.floor(Math.random() * questions.length)](person);\n// if (rare) {\n//     //prioritize less common questions\n//     rare = false;\n//     limit = rareQuestions.length;\n//     let result = rareQuestions[Math.floor(Math.random() * rareQuestions.length)](person);\n//     if (result != null) { return result; }\n//     else { return questions[Math.floor(Math.random() * questions.length)](person); }\n// }\n// else {\n//     rare = true;\n//     return questions[Math.floor(Math.random() * questions.length)](person);\n// }\n}\nconst questions = [\n    function(person) {\n        return q0(person);\n    },\n    function(person) {\n        return q1(person);\n    },\n    function(person) {\n        return q2(person);\n    },\n    function(person) {\n        return q3(person);\n    },\n    function(person) {\n        return q4(person);\n    },\n    function(person) {\n        return q5(person);\n    },\n    function(person) {\n        return q6(person);\n    },\n    function(person) {\n        return q7(person);\n    },\n    function(person) {\n        return q8(person);\n    }, \n];\nconst q0 = function(person) {\n    if (fsData.getSpouse(person.a_num) != null) {\n        return {\n            clue: \"The name of \" + fsData.getSpouse(person.a_num).name.full + \"'s spouse.\",\n            answer: person.name.compressedName\n        };\n    } else {\n        return q1(person);\n    }\n};\nconst q1 = function(person) {\n    if (fsData.getChild(person.a_num)) {\n        return {\n            clue: fsData.getChild(person.a_num).name.full + \" is this \" + (person.gender == \"Male\" ? \"man\" : \"woman\") + \"'s child.\",\n            answer: person.name.compressedName\n        };\n    } else {\n        var rand = Math.floor(Math.random() * 2);\n        if (rand == 0) {\n            return q2(person);\n        } else return q3(person);\n    }\n};\nconst q2 = function(person) {\n    console.log(\"IN q2 \");\n    if (fsData.getChild(person.a_num) && person.gender === \"Male\") {\n        console.log(\"IN q2 if statement\");\n        return {\n            clue: \"This person is the father of \" + fsData.getChild(person.a_num).name.full + \".\",\n            answer: person.name.compressedName\n        };\n    } else {\n        return q4(person);\n    }\n};\nconst q3 = function(person) {\n    if (fsData.getChild(person.a_num) && person.gender === \"Female\") {\n        console.log(\"IN q3\");\n        return {\n            clue: \"This person is the mother of \" + fsData.getChild(person.a_num).name.full + \".\",\n            answer: person.name.compressedName\n        };\n    } else {\n        return q4(person);\n    }\n};\nconst q4 = function(person) {\n    if (fsData.getFather(person.a_num)) {\n        console.log(\"In q4 if\");\n        return {\n            clue: \"This person is the child of \" + fsData.getFather(person.a_num).name.full + \".\",\n            answer: person.name.compressedName\n        };\n    } else {\n        return q5(person);\n    }\n};\nconst q5 = function(person) {\n    if (fsData.getMother(person.a_num)) {\n        console.log(\"In q5 if\");\n        return {\n            clue: \"This person is the child of \" + fsData.getMother(person.a_num).name.full + \".\",\n            answer: person.name.compressedName\n        };\n    } else {\n        return q6(person);\n    }\n};\nconst q6 = function(person) {\n    if (person.deathPlace && person.lifespan.years && person.deathDate.year) {\n        return {\n            clue: \"This person died in \" + person.deathPlace + \" at the age of \" + person.lifespan.years + \" in \" + person.deathDate.year + \".\",\n            answer: person.name.compressedName\n        };\n    } else {\n        return q7(person);\n    }\n};\nconst q7 = function(person) {\n    if (person.birthPlace && person.birthDate.year && person.birthDate.month && person.birthDate.day) {\n        return {\n            clue: \"This person was born in \" + person.birthPlace + \" in \" + person.birthDate.month + \" \" + person.birthDate.day + \", \" + person.birthDate.year + \".\",\n            answer: person.name.compressedName\n        };\n    } else {\n        return q8(person);\n    }\n};\nconst q8 = function(person) {\n    if (person.birthPlace && person.birthDate.year) {\n        return {\n            clue: \"This person was born in \" + person.birthPlace + \" in \" + person.birthDate.year + \".\",\n            answer: person.name.compressedName\n        };\n    } else {\n        return q0(person);\n    }\n} //rare questions\n // const rareQuestions = [\n //     function(person) { return r0(person); },\n // ]\n // const r0 = function(person) {\n //     if (person.deathPlace && person.lifespan.years) { return {\n //         clue: \"This person died in \" + person.deathPlace + \" at the age of \" + person.lifespan.years + \".\",\n //         answer: person.name.compressedName,\n //     }} else {\n //         limit--; if (limit == 0) { return null; }\n //         return r0(person);\n //     }\n // }\n // Question groupings\n;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvcXVlc3Rpb25nZW5lcmF0b3IuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0M7QUFFL0MsSUFBSUMsTUFBTSxHQUFHLElBQUk7QUFDakIsSUFBSUMsSUFBSSxHQUFHLElBQUk7QUFDZixJQUFJQyxLQUFLO0FBRU0sU0FBU0MsT0FBTyxDQUFFQyxHQUFHLEVBQUVDLEdBQUcsRUFDekM7SUFDSSxJQUFJRCxHQUFHLENBQUNFLE1BQU0sS0FBSyxNQUFNLEVBQ3pCO1FBQ0lOLE1BQU0sR0FBRyxJQUFJRCw4REFBSSxFQUFFLENBQUM7UUFDcEIsTUFBTVEsR0FBRyxHQUFHLElBQUlDLEdBQUcsQ0FBQ0MsTUFBTSxDQUFDQyxPQUFPLENBQUNOLEdBQUcsQ0FBQ08sSUFBSSxDQUFDQyxVQUFVLENBQUMsQ0FBQztRQUN4RFosTUFBTSxDQUFDYSxVQUFVLENBQUNOLEdBQUcsQ0FBQyxDQUFDO1FBQ3ZCLElBQUlPLGNBQWMsR0FBR1YsR0FBRyxDQUFDTyxJQUFJLENBQUNHLGNBQWM7UUFDNUMsSUFBSUMsV0FBVyxHQUFHLElBQUlDLEtBQUs7UUFFM0IsZ0NBQWdDO1FBQ2hDLDBGQUEwRjtRQUMxRix1Q0FBdUM7UUFDdkMsOEJBQThCO1FBQzlCLCtEQUErRDtRQUMvRCxnQ0FBZ0M7UUFDaENDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGlCQUFpQixFQUFFSixjQUFjLENBQUMsQ0FBQztRQUUvQ0EsY0FBYyxDQUFDSyxPQUFPLENBQUNDLENBQUFBLEdBQUcsR0FBSTtZQUMxQixJQUFJQyxNQUFNLEdBQUdyQixNQUFNLENBQUNzQixTQUFTLENBQUNDLEdBQUcsQ0FBQ0gsR0FBRyxDQUFDSSxRQUFRLEVBQUUsQ0FBQztZQUNqRCxJQUFJQyxNQUFNLEdBQUdDLGNBQWMsQ0FBQ0wsTUFBTSxDQUFDO1lBQ25DTixXQUFXLENBQUNZLElBQUksQ0FBQ0YsTUFBTSxDQUFDLENBQUM7U0FDNUIsQ0FBQyxDQUFDO1FBRUgsaUNBQWlDO1FBQ2pDUixPQUFPLENB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LE9BQU9QLEVBQUUsQ0FBQ3RCLE1BQU0sQ0FBQyxDQUFDO0tBQUU7Q0FDakM7QUFFRCxNQUFNc0IsRUFBRSxHQUFHLFNBQVN0QixNQUFNLEVBQUU7SUFDeEIsSUFBSUEsTUFBTSxDQUFDd0MsVUFBVSxJQUFJeEMsTUFBTSxDQUFDeUMsU0FBUyxDQUFDRixJQUFJLEVBQUU7UUFBRSxPQUFPO1lBQ3JEZCxJQUFJLEVBQUUsMEJBQTBCLEdBQUd6QixNQUFNLENBQUN3QyxVQUFVLEdBQUcsTUFBTSxHQUFHeEMsTUFBTSxDQUFDeUMsU0FBUyxDQUFDRixJQUFJLEdBQUcsR0FBRztZQUMzRlgsTUFBTSxFQUFFNUIsTUFBTSxDQUFDMEIsSUFBSSxDQUFDRyxjQUFjO1NBQ3JDO0tBQUMsTUFBTTtRQUFFLE9BQU9mLEVBQUUsQ0FBQ2QsTUFBTSxDQUFDLENBQUM7S0FBRTtDQUNqQyxDQUVELGdCQUFnQjtDQUVoQiwwQkFBMEI7Q0FDMUIsK0NBQStDO0NBQy9DLElBQUk7Q0FFSixnQ0FBZ0M7Q0FDaEMsaUVBQWlFO0NBQ2pFLDhHQUE4RztDQUM5Ryw4Q0FBOEM7Q0FDOUMsZ0JBQWdCO0NBQ2hCLG9EQUFvRDtDQUNwRCw2QkFBNkI7Q0FDN0IsUUFBUTtDQUNSLElBQUk7Q0FHSixxQkFBcUI7QUFuQnBCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmFtaWx5dGVjaC1nYW1lcy8uL3BhZ2VzL2FwaS9xdWVzdGlvbmdlbmVyYXRvci5qcz8xM2Y3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUcmVlIGZyb20gJy4uLy4uL2RhdGEvZnNkYXRhc3RydWN0dXJlcyc7XG5cbnZhciBmc0RhdGEgPSBudWxsO1xubGV0IHJhcmUgPSB0cnVlO1xudmFyIGxpbWl0O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBoYW5kbGVyIChyZXEsIHJlcylcbntcbiAgICBpZiAocmVxLm1ldGhvZCA9PT0gJ1BPU1QnKVxuICAgIHtcbiAgICAgICAgZnNEYXRhID0gbmV3IFRyZWUoKTtcbiAgICAgICAgY29uc3QgbWFwID0gbmV3IE1hcChPYmplY3QuZW50cmllcyhyZXEuYm9keS51c2VyRlNEYXRhKSk7XG4gICAgICAgIGZzRGF0YS5zZXRQZXJzb25zKG1hcCk7XG4gICAgICAgIHZhciBhc2NlbmRhbmN5TnVtcyA9IHJlcS5ib2R5LmFzY2VuZGFuY3lOdW1zO1xuICAgICAgICB2YXIgcHJvbXB0QXJyYXkgPSBuZXcgQXJyYXk7XG5cbiAgICAgICAgLy9jb25zb2xlLmxvZygncmVxOiAnLCByZXEuYm9keSlcbiAgICAgICAgLy9jb25zb2xlLmxvZyhcInNpemUgYmVmb3JlIGJlY29taW5nIGEgbWFwIFwiICsgT2JqZWN0LmVudHJpZXMocmVxLmJvZHkudXNlckZTRGF0YSkubGVuZ3RoKTtcbiAgICAgICAgLy9jb25zb2xlLmxvZyhcIm1hcCBsZW5ndGggXCIgKyBtYXAuc2l6ZSlcbiAgICAgICAgLy9jb25zb2xlLmxvZyhhc2NlbmRhbmN5TnVtcyk7XG4gICAgICAgIC8vY29uc29sZS5sb2coXCJ0cmVlIFwiICsgQXJyYXkuZnJvbShmc0RhdGEucGVyc29uTWFwLnZhbHVlcygpKSk7XG4gICAgICAgIC8vY29uc29sZS5sb2coZnNEYXRhLnBlcnNvbk1hcCk7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiYXNjZW5kZW5jeSBudW1zXCIsIGFzY2VuZGFuY3lOdW1zKTtcblxuICAgICAgICBhc2NlbmRhbmN5TnVtcy5mb3JFYWNoKG51bSA9PiB7XG4gICAgICAgICAgICBsZXQgcGVyc29uID0gZnNEYXRhLnBlcnNvbk1hcC5nZXQobnVtLnRvU3RyaW5nKCkpO1xuICAgICAgICAgICAgbGV0IHJlc3VsdCA9IGdlbmVyYXRlUHJvbXB0KHBlcnNvbik7XG4gICAgICAgICAgICBwcm9tcHRBcnJheS5wdXNoKHJlc3VsdCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vY29uc29sZS5sb2cocHJvbXB0QXJyYXkubGVuZ3RoKVxuICAgICAgICBjb25zb2xlLmxvZyhwcm9tcHRBcnJheSk7XG5cbiAgICAgICAgcmVzLnN0YXR1cygyMDEpLmpzb24ocHJvbXB0QXJyYXkpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmVzLnN0YXR1cyg0MDUpLmpzb24oXCJyZXF1ZXN0IG1ldGhvZCBtdXN0IGJlIFBPU1RcIik7XG4gICAgfVxufVxuXG4vKlxuUG90ZW50aWFsIHF1ZXN0aW9uIGNhdGVnb3JpZXM6XG5cbnJlbGF0aW9uc2hpcHMgKHNpYmxpbmcgY291bnQpIChwYXRlcm5hbCB2cyBtYXRlcm5hbCBmYW1pbHkpIChiaXJ0aCBvcmRlcilcbm9jY3VwYXRpb25zXG5wbGFjZXMgb3IgdGltZXMgb2YgZXZlbnRzIChob21ldG93bikgKG1hcnJpYWdlIHBsYWNlKSAoYWdlIGF0IGRlYXRoKVxuKG1heWJlKSBsaWZlIGV2ZW50cyBkdXJpbmcgZmFtb3VzIHRpbWUgcGVyaW9kc1xuKi9cblxuZnVuY3Rpb24gZ2VuZXJhdGVQcm9tcHQocGVyc29uKSB7XG4gICAgcmV0dXJuIHF1ZXN0aW9uc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBxdWVzdGlvbnMubGVuZ3RoKV0ocGVyc29uKTtcbiAgICAvLyBpZiAocmFyZSkge1xuICAgIC8vICAgICAvL3ByaW9yaXRpemUgbGVzcyBjb21tb24gcXVlc3Rpb25zXG4gICAgLy8gICAgIHJhcmUgPSBmYWxzZTtcbiAgICAvLyAgICAgbGltaXQgPSByYXJlUXVlc3Rpb25zLmxlbmd0aDtcbiAgICAvLyAgICAgbGV0IHJlc3VsdCA9IHJhcmVRdWVzdGlvbnNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcmFyZVF1ZXN0aW9ucy5sZW5ndGgpXShwZXJzb24pO1xuICAgIC8vICAgICBpZiAocmVzdWx0ICE9IG51bGwpIHsgcmV0dXJuIHJlc3VsdDsgfVxuICAgIC8vICAgICBlbHNlIHsgcmV0dXJuIHF1ZXN0aW9uc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBxdWVzdGlvbnMubGVuZ3RoKV0ocGVyc29uKTsgfVxuICAgIC8vIH1cbiAgICAvLyBlbHNlIHtcbiAgICAvLyAgICAgcmFyZSA9IHRydWU7XG4gICAgLy8gICAgIHJldHVybiBxdWVzdGlvbnNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcXVlc3Rpb25zLmxlbmd0aCldKHBlcnNvbik7XG4gICAgLy8gfVxufVxuXG5jb25zdCBxdWVzdGlvbnMgPSBbXG4gICAgZnVuY3Rpb24ocGVyc29uKSB7IHJldHVybiBxMChwZXJzb24pOyB9LFxuICAgIGZ1bmN0aW9uKHBlcnNvbikgeyByZXR1cm4gcTEocGVyc29uKTsgfSxcbiAgICBmdW5jdGlvbihwZXJzb24pIHsgcmV0dXJuIHEyKHBlcnNvbik7IH0sXG4gICAgZnVuY3Rpb24ocGVyc29uKSB7IHJldHVybiBxMyhwZXJzb24pOyB9LFxuICAgIGZ1bmN0aW9uKHBlcnNvbikgeyByZXR1cm4gcTQocGVyc29uKTsgfSxcbiAgICBmdW5jdGlvbihwZXJzb24pIHsgcmV0dXJuIHE1KHBlcnNvbik7IH0sXG4gICAgZnVuY3Rpb24ocGVyc29uKSB7IHJldHVybiBxNihwZXJzb24pOyB9LFxuICAgIGZ1bmN0aW9uKHBlcnNvbikgeyByZXR1cm4gcTcocGVyc29uKTsgfSxcbiAgICBmdW5jdGlvbihwZXJzb24pIHsgcmV0dXJuIHE4KHBlcnNvbik7IH0sXG5dXG5cbmNvbnN0IHEwID0gZnVuY3Rpb24ocGVyc29uKSB7XG4gICAgaWYgKGZzRGF0YS5nZXRTcG91c2UocGVyc29uLmFfbnVtKSAhPSBudWxsKSB7IHJldHVybiB7XG4gICAgICAgIGNsdWU6IFwiVGhlIG5hbWUgb2YgXCIgKyBmc0RhdGEuZ2V0U3BvdXNlKHBlcnNvbi5hX251bSkubmFtZS5mdWxsICsgXCIncyBzcG91c2UuXCIsXG4gICAgICAgIGFuc3dlcjogcGVyc29uLm5hbWUuY29tcHJlc3NlZE5hbWUsXG4gICAgfX0gZWxzZSB7IHJldHVybiBxMShwZXJzb24pOyB9XG59XG5cbmNvbnN0IHExID0gZnVuY3Rpb24ocGVyc29uKSB7XG4gICAgaWYgKGZzRGF0YS5nZXRDaGlsZChwZXJzb24uYV9udW0pKSB7IHJldHVybiB7XG4gICAgICAgIGNsdWU6IGZzRGF0YS5nZXRDaGlsZChwZXJzb24uYV9udW0pLm5hbWUuZnVsbCArIFwiIGlzIHRoaXMgXCIgKyAocGVyc29uLmdlbmRlciA9PSBcIk1hbGVcIiA/IFwibWFuXCIgOiBcIndvbWFuXCIpICsgXCIncyBjaGlsZC5cIixcbiAgICAgICAgYW5zd2VyOiBwZXJzb24ubmFtZS5jb21wcmVzc2VkTmFtZSxcbiAgICB9fSBlbHNlIHsgXG4gICAgICAgIHZhciByYW5kID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMik7XG4gICAgICAgIGlmIChyYW5kID09IDApIHtyZXR1cm4gcTIocGVyc29uKTt9XG4gICAgICAgIGVsc2UgcmV0dXJuIHEzKHBlcnNvbik7XG4gICAgfVxufVxuXG5jb25zdCBxMiA9IGZ1bmN0aW9uKHBlcnNvbikge1xuICAgIGNvbnNvbGUubG9nKFwiSU4gcTIgXCIpO1xuICAgIGlmIChmc0RhdGEuZ2V0Q2hpbGQocGVyc29uLmFfbnVtKSAmJiBwZXJzb24uZ2VuZGVyID09PSBcIk1hbGVcIikgXG4gICAgeyAgIGNvbnNvbGUubG9nKFwiSU4gcTIgaWYgc3RhdGVtZW50XCIpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICBjbHVlOiBcIlRoaXMgcGVyc29uIGlzIHRoZSBmYXRoZXIgb2YgXCIgKyBmc0RhdGEuZ2V0Q2hpbGQocGVyc29uLmFfbnVtKS5uYW1lLmZ1bGwgKyBcIi5cIixcbiAgICAgICAgYW5zd2VyOiBwZXJzb24ubmFtZS5jb21wcmVzc2VkTmFtZSxcbiAgICB9fSBlbHNlIHsgcmV0dXJuIHE0KHBlcnNvbik7IH1cbn1cblxuY29uc3QgcTMgPSBmdW5jdGlvbihwZXJzb24pIHtcbiAgICBpZiAoZnNEYXRhLmdldENoaWxkKHBlcnNvbi5hX251bSkgJiYgcGVyc29uLmdlbmRlciA9PT0gXCJGZW1hbGVcIikgeyBcbiAgICAgICAgY29uc29sZS5sb2coXCJJTiBxM1wiKVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICBjbHVlOiBcIlRoaXMgcGVyc29uIGlzIHRoZSBtb3RoZXIgb2YgXCIgKyBmc0RhdGEuZ2V0Q2hpbGQocGVyc29uLmFfbnVtKS5uYW1lLmZ1bGwgKyBcIi5cIixcbiAgICAgICAgYW5zd2VyOiBwZXJzb24ubmFtZS5jb21wcmVzc2VkTmFtZSxcbiAgICB9fSBlbHNlIHsgcmV0dXJuIHE0KHBlcnNvbik7IH1cbn1cblxuY29uc3QgcTQgPSBmdW5jdGlvbihwZXJzb24pIHtcbiAgICBpZiAoZnNEYXRhLmdldEZhdGhlcihwZXJzb24uYV9udW0pKSB7IFxuICAgICAgICBjb25zb2xlLmxvZyhcIkluIHE0IGlmXCIpXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgIGNsdWU6IFwiVGhpcyBwZXJzb24gaXMgdGhlIGNoaWxkIG9mIFwiICsgZnNEYXRhLmdldEZhdGhlcihwZXJzb24uYV9udW0pLm5hbWUuZnVsbCArIFwiLlwiLFxuICAgICAgICBhbnN3ZXI6IHBlcnNvbi5uYW1lLmNvbXByZXNzZWROYW1lLFxuICAgIH19IGVsc2UgeyByZXR1cm4gcTUocGVyc29uKTsgfVxufVxuXG5jb25zdCBxNSA9IGZ1bmN0aW9uKHBlcnNvbikge1xuICAgIGlmIChmc0RhdGEuZ2V0TW90aGVyKHBlcnNvbi5hX251bSkpIHsgXG4gICAgICAgIGNvbnNvbGUubG9nKFwiSW4gcTUgaWZcIilcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgY2x1ZTogXCJUaGlzIHBlcnNvbiBpcyB0aGUgY2hpbGQgb2YgXCIgKyBmc0RhdGEuZ2V0TW90aGVyKHBlcnNvbi5hX251bSkubmFtZS5mdWxsICsgXCIuXCIsXG4gICAgICAgIGFuc3dlcjogcGVyc29uLm5hbWUuY29tcHJlc3NlZE5hbWUsXG4gICAgfX0gZWxzZSB7IHJldHVybiBxNihwZXJzb24pOyB9XG59XG5cbmNvbnN0IHE2ID0gZnVuY3Rpb24ocGVyc29uKSB7XG4gICAgaWYgKHBlcnNvbi5kZWF0aFBsYWNlICYmIHBlcnNvbi5saWZlc3Bhbi55ZWFycyAmJiBwZXJzb24uZGVhdGhEYXRlLnllYXIpIHsgcmV0dXJuIHtcbiAgICAgICAgY2x1ZTogXCJUaGlzIHBlcnNvbiBkaWVkIGluIFwiICsgcGVyc29uLmRlYXRoUGxhY2UgKyBcIiBhdCB0aGUgYWdlIG9mIFwiICsgcGVyc29uLmxpZmVzcGFuLnllYXJzICsgXCIgaW4gXCIgXG4gICAgICAgICAgICArIHBlcnNvbi5kZWF0aERhdGUueWVhciArIFwiLlwiLFxuICAgICAgICBhbnN3ZXI6IHBlcnNvbi5uYW1lLmNvbXByZXNzZWROYW1lLFxuICAgIH19IGVsc2UgeyByZXR1cm4gcTcocGVyc29uKTsgfVxufVxuXG5jb25zdCBxNyA9IGZ1bmN0aW9uKHBlcnNvbikge1xuICAgIGlmIChwZXJzb24uYmlydGhQbGFjZSAmJiBwZXJzb24uYmlydGhEYXRlLnllYXIgJiYgcGVyc29uLmJpcnRoRGF0ZS5tb250aCAmJiBwZXJzb24uYmlydGhEYXRlLmRheSkgeyByZXR1cm4ge1xuICAgICAgICBjbHVlOiBcIlRoaXMgcGVyc29uIHdhcyBib3JuIGluIFwiICsgcGVyc29uLmJpcnRoUGxhY2UgKyBcIiBpbiBcIiBcbiAgICAgICAgICAgICsgcGVyc29uLmJpcnRoRGF0ZS5tb250aCArIFwiIFwiICsgcGVyc29uLmJpcnRoRGF0ZS5kYXkgKyBcIiwgXCIgKyBwZXJzb24uYmlydGhEYXRlLnllYXIgKyBcIi5cIixcbiAgICAgICAgYW5zd2VyOiBwZXJzb24ubmFtZS5jb21wcmVzc2VkTmFtZSxcbiAgICB9fSBlbHNlIHsgcmV0dXJuIHE4KHBlcnNvbik7IH1cbn1cblxuY29uc3QgcTggPSBmdW5jdGlvbihwZXJzb24pIHtcbiAgICBpZiAocGVyc29uLmJpcnRoUGxhY2UgJiYgcGVyc29uLmJpcnRoRGF0ZS55ZWFyKSB7IHJldHVybiB7XG4gICAgICAgIGNsdWU6IFwiVGhpcyBwZXJzb24gd2FzIGJvcm4gaW4gXCIgKyBwZXJzb24uYmlydGhQbGFjZSArIFwiIGluIFwiICsgcGVyc29uLmJpcnRoRGF0ZS55ZWFyICsgXCIuXCIsXG4gICAgICAgIGFuc3dlcjogcGVyc29uLm5hbWUuY29tcHJlc3NlZE5hbWUsXG4gICAgfX0gZWxzZSB7IHJldHVybiBxMChwZXJzb24pOyB9XG59XG5cbi8vcmFyZSBxdWVzdGlvbnNcblxuLy8gY29uc3QgcmFyZVF1ZXN0aW9ucyA9IFtcbi8vICAgICBmdW5jdGlvbihwZXJzb24pIHsgcmV0dXJuIHIwKHBlcnNvbik7IH0sXG4vLyBdXG5cbi8vIGNvbnN0IHIwID0gZnVuY3Rpb24ocGVyc29uKSB7XG4vLyAgICAgaWYgKHBlcnNvbi5kZWF0aFBsYWNlICYmIHBlcnNvbi5saWZlc3Bhbi55ZWFycykgeyByZXR1cm4ge1xuLy8gICAgICAgICBjbHVlOiBcIlRoaXMgcGVyc29uIGRpZWQgaW4gXCIgKyBwZXJzb24uZGVhdGhQbGFjZSArIFwiIGF0IHRoZSBhZ2Ugb2YgXCIgKyBwZXJzb24ubGlmZXNwYW4ueWVhcnMgKyBcIi5cIixcbi8vICAgICAgICAgYW5zd2VyOiBwZXJzb24ubmFtZS5jb21wcmVzc2VkTmFtZSxcbi8vICAgICB9fSBlbHNlIHtcbi8vICAgICAgICAgbGltaXQtLTsgaWYgKGxpbWl0ID09IDApIHsgcmV0dXJuIG51bGw7IH1cbi8vICAgICAgICAgcmV0dXJuIHIwKHBlcnNvbik7XG4vLyAgICAgfVxuLy8gfVxuXG5cbi8vIFF1ZXN0aW9uIGdyb3VwaW5ncyJdLCJuYW1lcyI6WyJUcmVlIiwiZnNEYXRhIiwicmFyZSIsImxpbWl0IiwiaGFuZGxlciIsInJlcSIsInJlcyIsIm1ldGhvZCIsIm1hcCIsIk1hcCIsIk9iamVjdCIsImVudHJpZXMiLCJib2R5IiwidXNlckZTRGF0YSIsInNldFBlcnNvbnMiLCJhc2NlbmRhbmN5TnVtcyIsInByb21wdEFycmF5IiwiQXJyYXkiLCJjb25zb2xlIiwibG9nIiwiZm9yRWFjaCIsIm51bSIsInBlcnNvbiIsInBlcnNvbk1hcCIsImdldCIsInRvU3RyaW5nIiwicmVzdWx0IiwiZ2VuZXJhdGVQcm9tcHQiLCJwdXNoIiwic3RhdHVzIiwianNvbiIsInF1ZXN0aW9ucyIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImxlbmd0aCIsInEwIiwicTEiLCJxMiIsInEzIiwicTQiLCJxNSIsInE2IiwicTciLCJxOCIsImdldFNwb3VzZSIsImFfbnVtIiwiY2x1ZSIsIm5hbWUiLCJmdWxsIiwiYW5zd2VyIiwiY29tcHJlc3NlZE5hbWUiLCJnZXRDaGlsZCIsImdlbmRlciIsInJhbmQiLCJnZXRGYXRoZXIiLCJnZXRNb3RoZXIiLCJkZWF0aFBsYWNlIiwibGlmZXNwYW4iLCJ5ZWFycyIsImRlYXRoRGF0ZSIsInllYXIiLCJiaXJ0aFBsYWNlIiwiYmlydGhEYXRlIiwibW9udGgiLCJkYXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./pages/api/questiongenerator.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/questiongenerator.js"));
module.exports = __webpack_exports__;

})();